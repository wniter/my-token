{
	"id": "747b16d7233617a5e9b2af9679645ac7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/01_ERC20_token.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./abstracts/Context.sol\";\r\nimport \"./interfaces/IERC20.sol\";\r\nimport \"./interfaces/IERC20Metadata.sol\";\r\nimport \"./libraries/SafeMath.sol\";\r\n\r\n/**\r\n    deloy:\r\n*/\r\n// 实现{IERC20}接口\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    \r\n    //使用uint256调用SafeMath\r\n   using SafeMath for uint256;\r\n\r\n\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n    \r\n    //token的总量\r\n    uint256 private _totalSupply;\r\n    //token的名字 name\r\n    string private _name;\r\n    //token的符号\r\n    string private _symbol;\r\n\r\n    // 设置 {name} 和 {symbol} 的值\r\n    constructor(string memory name_, string memory symbol_,uint256  totalSupply_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n        _totalSupply = _totalSupply;\r\n    }\r\n\r\n    // 返回代币的名称\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    // 返回代币的符号\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    // 返回代币的精度（小数位数）\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    // 返回存在的代币数量\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    // 返回 account 拥有的代币数量\r\n    function balanceOf(address account)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _balances[account];\r\n    }\r\n\r\n    // 将 amount 代币从调用者账户移动到 recipient\r\n    // 返回一个布尔值表示操作是否成功\r\n    // 发出 {Transfer} 事件\r\n    function transfer(address recipient, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    // 返回 spender 允许 owner 通过 {transferFrom}消费剩余的代币数量\r\n    function allowance(address owner, address spender)\r\n        public\r\n        view\r\n        virtual\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    // 调用者设置 spender 消费自己amount数量的代币\r\n    function approve(address spender, uint256 amount)\r\n        public\r\n        virtual\r\n        override\r\n        returns (bool)\r\n    {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    // 将amount数量的代币从 sender 移动到 recipient ，从调用者的账户扣除 amount\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(\r\n            currentAllowance >= amount,\r\n            \"ERC20: transfer amount exceeds allowance\"\r\n        );\r\n        unchecked {\r\n            _approve(sender, _msgSender(), currentAllowance - amount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // 增加调用者授予 spender 的可消费数额\r\n    function increaseAllowance(address spender, uint256 addedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        _approve(\r\n            _msgSender(),\r\n            spender,\r\n            _allowances[_msgSender()][spender] + addedValue\r\n        );\r\n        return true;\r\n    }\r\n\r\n    // 减少调用者授予 spender 的可消费数额\r\n    function decreaseAllowance(address spender, uint256 subtractedValue)\r\n        public\r\n        virtual\r\n        returns (bool)\r\n    {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(\r\n            currentAllowance >= subtractedValue,\r\n            \"ERC20: decreased allowance below zero\"\r\n        );\r\n        unchecked {\r\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // 将amount数量的代币从 sender 移动到 recipient\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(\r\n            senderBalance >= amount,\r\n            \"ERC20: transfer amount exceeds balance\"\r\n        );\r\n        unchecked {\r\n            _balances[sender] = senderBalance - amount;\r\n        }\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n\r\n        _afterTokenTransfer(sender, recipient, amount);\r\n    }\r\n\r\n    // 给account账户创建amount数量的代币，同时增加总供应量\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    // 给account账户减少amount数量的代币，同时减少总供应量\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    // 将 `amount` 设置为 `spender` 对 `owner` 的代币的津贴\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    // 在任何代币转移之前调用的钩子， 包括铸币和销币\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    // 在任何代币转移之后调用的钩子， 包括铸币和销币\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n\r\n"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\r\n * checks.\r\n *\r\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\r\n * in bugs, because programmers usually assume that an overflow raises an\r\n * error, which is the standard behavior in high level programming languages.\r\n * `SafeMath` restores this intuition by reverting the transaction when an\r\n * operation overflows.\r\n *\r\n * Using this library instead of the unchecked operations eliminates an entire\r\n * class of bugs, so it's recommended to use it always.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, \"SafeMath: addition overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting with custom message on overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        uint256 c = a + b;\r\n        require(c >= a, errorMessage);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on underflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot underflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return sub(a, b, \"SafeMath: subtraction underflow\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on underflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     * - Subtraction cannot underflow.\r\n     */\r\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b <= a, errorMessage);\r\n        uint256 c = a - b;\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, \"SafeMath: multiplication overflow\");\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n        // benefit is lost if 'b' is also tested.\r\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 c = a * b;\r\n        require(c / a == b, errorMessage);\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers.\r\n     * Reverts on division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return div(a, b, \"SafeMath: division by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers.\r\n     * Reverts with custom message on division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        // Solidity only automatically asserts when dividing by 0\r\n        require(b > 0, errorMessage);\r\n        uint256 c = a / b;\r\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\r\n\r\n        return c;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return mod(a, b, \"SafeMath: modulo by zero\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * Reverts with custom message when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\r\n        require(b != 0, errorMessage);\r\n        return a % b;\r\n    }\r\n}\r\n"
			},
			"contracts/interfaces/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0;\r\n\r\nimport './IERC20.sol';\r\n\r\n// ERC20 标准中可选元数据功能的接口\r\ninterface IERC20Metadata is IERC20 {\r\n    // 返回代币名称\r\n    function name() external view returns (string memory);\r\n\r\n    // 返回代币符号\r\n    function symbol() external view returns (string memory);\r\n\r\n    // 返回代币的精度（小数位数）\r\n    function decimals() external view returns (uint8);\r\n}"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0;\r\n\r\ninterface IERC20 {\r\n    // 返回存在的代币数量\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    // 返回 account 拥有的代币数量\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    // 将 amount 代币从调用者账户移动到 recipient\r\n    // 返回一个布尔值表示操作是否成功\r\n    // 发出 {Transfer} 事件\r\n    function transfer(address recipient, uint256 amount)\r\n        external\r\n        returns (bool);\r\n\r\n    // 返回 spender 允许 owner 通过 {transferFrom}消费剩余的代币数量\r\n    function allowance(address owner, address spender)\r\n        external\r\n        view\r\n        returns (uint256);\r\n\r\n    // 调用者设置 spender 消费自己amount数量的代币\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    // 将amount数量的代币从 sender 移动到 recipient ，从调用者的账户扣除 amount\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    // 当value数量的代币从一个form账户移动到另一个to账户\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n    // 当调用{approve}时，触发该事件\r\n    event Approval(\r\n        address indexed owner,\r\n        address indexed spender,\r\n        uint256 value\r\n    );\r\n}\r\n"
			},
			"contracts/abstracts/Context.sol": {
				"content": "\r\n// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0;\r\n\r\n// 提供有关当前执行上下文的信息，包括事务的发送者及其数据。 虽然这些通常可以通过 msg.sender 和 msg.data 获得，但不应以这种直接方式访问它们，因为在处理元交易时，发送和支付执行的帐户可能不是实际的发送者（就应用而言）。\r\n// 只有中间的、类似程序集的合约才需要这个合约。\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        //  this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/01_ERC20_token.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply_",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/01_ERC20_token.sol\":259:7104  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/01_ERC20_token.sol\":733:909  constructor(string memory name_, string memory symbol_,uint256  totalSupply_) {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/01_ERC20_token.sol\":830:835  name_ */\n  dup3\n    /* \"contracts/01_ERC20_token.sol\":822:827  _name */\n  0x03\n    /* \"contracts/01_ERC20_token.sol\":822:835  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/01_ERC20_token.sol\":856:863  symbol_ */\n  dup2\n    /* \"contracts/01_ERC20_token.sol\":846:853  _symbol */\n  0x04\n    /* \"contracts/01_ERC20_token.sol\":846:863  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/01_ERC20_token.sol\":889:901  _totalSupply */\n  sload(0x02)\n    /* \"contracts/01_ERC20_token.sol\":874:886  _totalSupply */\n  0x02\n    /* \"contracts/01_ERC20_token.sol\":874:901  _totalSupply = _totalSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/01_ERC20_token.sol\":733:909  constructor(string memory name_, string memory symbol_,uint256  totalSupply_) {\r... */\n  pop\n  pop\n  pop\n    /* \"contracts/01_ERC20_token.sol\":259:7104  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:360   */\ntag_22:\n  0x00\n    /* \"#utility.yul\":121:186   */\n  tag_24\n    /* \"#utility.yul\":136:185   */\n  tag_25\n    /* \"#utility.yul\":178:184   */\n  dup5\n    /* \"#utility.yul\":136:185   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":121:186   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":112:186   */\n  swap1\n  pop\n    /* \"#utility.yul\":209:215   */\n  dup3\n    /* \"#utility.yul\":202:207   */\n  dup2\n    /* \"#utility.yul\":195:216   */\n  mstore\n    /* \"#utility.yul\":247:251   */\n  0x20\n    /* \"#utility.yul\":240:245   */\n  dup2\n    /* \"#utility.yul\":236:252   */\n  add\n    /* \"#utility.yul\":285:288   */\n  dup5\n    /* \"#utility.yul\":276:282   */\n  dup5\n    /* \"#utility.yul\":271:274   */\n  dup5\n    /* \"#utility.yul\":267:283   */\n  add\n    /* \"#utility.yul\":264:289   */\n  gt\n    /* \"#utility.yul\":261:263   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":302:303   */\n  0x00\n    /* \"#utility.yul\":299:300   */\n  dup1\n    /* \"#utility.yul\":292:304   */\n  revert\n    /* \"#utility.yul\":261:263   */\ntag_28:\n    /* \"#utility.yul\":315:354   */\n  tag_29\n    /* \"#utility.yul\":347:353   */\n  dup5\n    /* \"#utility.yul\":342:345   */\n  dup3\n    /* \"#utility.yul\":337:340   */\n  dup6\n    /* \"#utility.yul\":315:354   */\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":102:360   */\n  pop\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":380:668   */\ntag_31:\n  0x00\n    /* \"#utility.yul\":496:499   */\n  dup3\n    /* \"#utility.yul\":489:493   */\n  0x1f\n    /* \"#utility.yul\":481:487   */\n  dup4\n    /* \"#utility.yul\":477:494   */\n  add\n    /* \"#utility.yul\":473:500   */\n  slt\n    /* \"#utility.yul\":463:465   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":514:515   */\n  0x00\n    /* \"#utility.yul\":511:512   */\n  dup1\n    /* \"#utility.yul\":504:516   */\n  revert\n    /* \"#utility.yul\":463:465   */\ntag_33:\n    /* \"#utility.yul\":547:553   */\n  dup2\n    /* \"#utility.yul\":541:554   */\n  mload\n    /* \"#utility.yul\":572:662   */\n  tag_34\n    /* \"#utility.yul\":658:661   */\n  dup5\n    /* \"#utility.yul\":650:656   */\n  dup3\n    /* \"#utility.yul\":643:647   */\n  0x20\n    /* \"#utility.yul\":635:641   */\n  dup7\n    /* \"#utility.yul\":631:648   */\n  add\n    /* \"#utility.yul\":572:662   */\n  tag_22\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":563:662   */\n  swap2\n  pop\n    /* \"#utility.yul\":453:668   */\n  pop\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":674:817   */\ntag_35:\n  0x00\n    /* \"#utility.yul\":762:768   */\n  dup2\n    /* \"#utility.yul\":756:769   */\n  mload\n    /* \"#utility.yul\":747:769   */\n  swap1\n  pop\n    /* \"#utility.yul\":778:811   */\n  tag_37\n    /* \"#utility.yul\":805:810   */\n  dup2\n    /* \"#utility.yul\":778:811   */\n  tag_38\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":737:817   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":823:1631   */\ntag_3:\n  0x00\n  dup1\n  0x00\n    /* \"#utility.yul\":996:998   */\n  0x60\n    /* \"#utility.yul\":984:993   */\n  dup5\n    /* \"#utility.yul\":975:982   */\n  dup7\n    /* \"#utility.yul\":971:994   */\n  sub\n    /* \"#utility.yul\":967:999   */\n  slt\n    /* \"#utility.yul\":964:966   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1012:1013   */\n  0x00\n    /* \"#utility.yul\":1009:1010   */\n  dup1\n    /* \"#utility.yul\":1002:1014   */\n  revert\n    /* \"#utility.yul\":964:966   */\ntag_40:\n    /* \"#utility.yul\":1076:1077   */\n  0x00\n    /* \"#utility.yul\":1065:1074   */\n  dup5\n    /* \"#utility.yul\":1061:1078   */\n  add\n    /* \"#utility.yul\":1055:1079   */\n  mload\n    /* \"#utility.yul\":1106:1124   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1098:1104   */\n  dup2\n    /* \"#utility.yul\":1095:1125   */\n  gt\n    /* \"#utility.yul\":1092:1094   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":1138:1139   */\n  0x00\n    /* \"#utility.yul\":1135:1136   */\n  dup1\n    /* \"#utility.yul\":1128:1140   */\n  revert\n    /* \"#utility.yul\":1092:1094   */\ntag_41:\n    /* \"#utility.yul\":1166:1240   */\n  tag_42\n    /* \"#utility.yul\":1232:1239   */\n  dup7\n    /* \"#utility.yul\":1223:1229   */\n  dup3\n    /* \"#utility.yul\":1212:1221   */\n  dup8\n    /* \"#utility.yul\":1208:1230   */\n  add\n    /* \"#utility.yul\":1166:1240   */\n  tag_31\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1156:1240   */\n  swap4\n  pop\n    /* \"#utility.yul\":1026:1250   */\n  pop\n    /* \"#utility.yul\":1310:1312   */\n  0x20\n    /* \"#utility.yul\":1299:1308   */\n  dup5\n    /* \"#utility.yul\":1295:1313   */\n  add\n    /* \"#utility.yul\":1289:1314   */\n  mload\n    /* \"#utility.yul\":1341:1359   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1333:1339   */\n  dup2\n    /* \"#utility.yul\":1330:1360   */\n  gt\n    /* \"#utility.yul\":1327:1329   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1373:1374   */\n  0x00\n    /* \"#utility.yul\":1370:1371   */\n  dup1\n    /* \"#utility.yul\":1363:1375   */\n  revert\n    /* \"#utility.yul\":1327:1329   */\ntag_43:\n    /* \"#utility.yul\":1401:1475   */\n  tag_44\n    /* \"#utility.yul\":1467:1474   */\n  dup7\n    /* \"#utility.yul\":1458:1464   */\n  dup3\n    /* \"#utility.yul\":1447:1456   */\n  dup8\n    /* \"#utility.yul\":1443:1465   */\n  add\n    /* \"#utility.yul\":1401:1475   */\n  tag_31\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1391:1475   */\n  swap3\n  pop\n    /* \"#utility.yul\":1260:1485   */\n  pop\n    /* \"#utility.yul\":1524:1526   */\n  0x40\n    /* \"#utility.yul\":1550:1614   */\n  tag_45\n    /* \"#utility.yul\":1606:1613   */\n  dup7\n    /* \"#utility.yul\":1597:1603   */\n  dup3\n    /* \"#utility.yul\":1586:1595   */\n  dup8\n    /* \"#utility.yul\":1582:1604   */\n  add\n    /* \"#utility.yul\":1550:1614   */\n  tag_35\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1540:1614   */\n  swap2\n  pop\n    /* \"#utility.yul\":1495:1624   */\n  pop\n    /* \"#utility.yul\":954:1631   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1637:1920   */\ntag_27:\n  0x00\n    /* \"#utility.yul\":1703:1705   */\n  0x40\n    /* \"#utility.yul\":1697:1706   */\n  mload\n    /* \"#utility.yul\":1687:1706   */\n  swap1\n  pop\n    /* \"#utility.yul\":1745:1749   */\n  dup2\n    /* \"#utility.yul\":1737:1743   */\n  dup2\n    /* \"#utility.yul\":1733:1750   */\n  add\n    /* \"#utility.yul\":1852:1858   */\n  dup2\n    /* \"#utility.yul\":1840:1850   */\n  dup2\n    /* \"#utility.yul\":1837:1859   */\n  lt\n    /* \"#utility.yul\":1816:1834   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1804:1814   */\n  dup3\n    /* \"#utility.yul\":1801:1835   */\n  gt\n    /* \"#utility.yul\":1798:1860   */\n  or\n    /* \"#utility.yul\":1795:1797   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1863:1881   */\n  tag_48\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1795:1797   */\ntag_47:\n    /* \"#utility.yul\":1903:1913   */\n  dup1\n    /* \"#utility.yul\":1899:1901   */\n  0x40\n    /* \"#utility.yul\":1892:1914   */\n  mstore\n    /* \"#utility.yul\":1677:1920   */\n  pop\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1926:2258   */\ntag_26:\n  0x00\n    /* \"#utility.yul\":2078:2096   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2070:2076   */\n  dup3\n    /* \"#utility.yul\":2067:2097   */\n  gt\n    /* \"#utility.yul\":2064:2066   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":2100:2118   */\n  tag_52\n  tag_49\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2064:2066   */\ntag_51:\n    /* \"#utility.yul\":2185:2189   */\n  0x1f\n    /* \"#utility.yul\":2181:2190   */\n  not\n    /* \"#utility.yul\":2174:2178   */\n  0x1f\n    /* \"#utility.yul\":2166:2172   */\n  dup4\n    /* \"#utility.yul\":2162:2179   */\n  add\n    /* \"#utility.yul\":2158:2191   */\n  and\n    /* \"#utility.yul\":2150:2191   */\n  swap1\n  pop\n    /* \"#utility.yul\":2246:2250   */\n  0x20\n    /* \"#utility.yul\":2240:2244   */\n  dup2\n    /* \"#utility.yul\":2236:2251   */\n  add\n    /* \"#utility.yul\":2228:2251   */\n  swap1\n  pop\n    /* \"#utility.yul\":1993:2258   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2264:2341   */\ntag_53:\n  0x00\n    /* \"#utility.yul\":2330:2335   */\n  dup2\n    /* \"#utility.yul\":2319:2335   */\n  swap1\n  pop\n    /* \"#utility.yul\":2309:2341   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2347:2654   */\ntag_30:\n    /* \"#utility.yul\":2415:2416   */\n  0x00\n    /* \"#utility.yul\":2425:2538   */\ntag_56:\n    /* \"#utility.yul\":2439:2445   */\n  dup4\n    /* \"#utility.yul\":2436:2437   */\n  dup2\n    /* \"#utility.yul\":2433:2446   */\n  lt\n    /* \"#utility.yul\":2425:2538   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2524:2525   */\n  dup1\n    /* \"#utility.yul\":2519:2522   */\n  dup3\n    /* \"#utility.yul\":2515:2526   */\n  add\n    /* \"#utility.yul\":2509:2527   */\n  mload\n    /* \"#utility.yul\":2505:2506   */\n  dup2\n    /* \"#utility.yul\":2500:2503   */\n  dup5\n    /* \"#utility.yul\":2496:2507   */\n  add\n    /* \"#utility.yul\":2489:2528   */\n  mstore\n    /* \"#utility.yul\":2461:2463   */\n  0x20\n    /* \"#utility.yul\":2458:2459   */\n  dup2\n    /* \"#utility.yul\":2454:2464   */\n  add\n    /* \"#utility.yul\":2449:2464   */\n  swap1\n  pop\n    /* \"#utility.yul\":2425:2538   */\n  jump(tag_56)\ntag_58:\n    /* \"#utility.yul\":2556:2562   */\n  dup4\n    /* \"#utility.yul\":2553:2554   */\n  dup2\n    /* \"#utility.yul\":2550:2563   */\n  gt\n    /* \"#utility.yul\":2547:2549   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":2636:2637   */\n  0x00\n    /* \"#utility.yul\":2627:2633   */\n  dup5\n    /* \"#utility.yul\":2622:2625   */\n  dup5\n    /* \"#utility.yul\":2618:2634   */\n  add\n    /* \"#utility.yul\":2611:2638   */\n  mstore\n    /* \"#utility.yul\":2547:2549   */\ntag_59:\n    /* \"#utility.yul\":2396:2654   */\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2660:2980   */\ntag_11:\n  0x00\n    /* \"#utility.yul\":2741:2742   */\n  0x02\n    /* \"#utility.yul\":2735:2739   */\n  dup3\n    /* \"#utility.yul\":2731:2743   */\n  div\n    /* \"#utility.yul\":2721:2743   */\n  swap1\n  pop\n    /* \"#utility.yul\":2788:2789   */\n  0x01\n    /* \"#utility.yul\":2782:2786   */\n  dup3\n    /* \"#utility.yul\":2778:2790   */\n  and\n    /* \"#utility.yul\":2809:2827   */\n  dup1\n    /* \"#utility.yul\":2799:2801   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":2865:2869   */\n  0x7f\n    /* \"#utility.yul\":2857:2863   */\n  dup3\n    /* \"#utility.yul\":2853:2870   */\n  and\n    /* \"#utility.yul\":2843:2870   */\n  swap2\n  pop\n    /* \"#utility.yul\":2799:2801   */\ntag_61:\n    /* \"#utility.yul\":2927:2929   */\n  0x20\n    /* \"#utility.yul\":2919:2925   */\n  dup3\n    /* \"#utility.yul\":2916:2930   */\n  lt\n    /* \"#utility.yul\":2896:2914   */\n  dup2\n    /* \"#utility.yul\":2893:2931   */\n  eq\n    /* \"#utility.yul\":2890:2892   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2946:2964   */\n  tag_63\n  tag_64\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2890:2892   */\ntag_62:\n    /* \"#utility.yul\":2711:2980   */\n  pop\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2986:3166   */\ntag_64:\n    /* \"#utility.yul\":3034:3111   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3031:3032   */\n  0x00\n    /* \"#utility.yul\":3024:3112   */\n  mstore\n    /* \"#utility.yul\":3131:3135   */\n  0x22\n    /* \"#utility.yul\":3128:3129   */\n  0x04\n    /* \"#utility.yul\":3121:3136   */\n  mstore\n    /* \"#utility.yul\":3155:3159   */\n  0x24\n    /* \"#utility.yul\":3152:3153   */\n  0x00\n    /* \"#utility.yul\":3145:3160   */\n  revert\n    /* \"#utility.yul\":3172:3352   */\ntag_49:\n    /* \"#utility.yul\":3220:3297   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3217:3218   */\n  0x00\n    /* \"#utility.yul\":3210:3298   */\n  mstore\n    /* \"#utility.yul\":3317:3321   */\n  0x41\n    /* \"#utility.yul\":3314:3315   */\n  0x04\n    /* \"#utility.yul\":3307:3322   */\n  mstore\n    /* \"#utility.yul\":3341:3345   */\n  0x24\n    /* \"#utility.yul\":3338:3339   */\n  0x00\n    /* \"#utility.yul\":3331:3346   */\n  revert\n    /* \"#utility.yul\":3358:3480   */\ntag_38:\n    /* \"#utility.yul\":3431:3455   */\n  tag_68\n    /* \"#utility.yul\":3449:3454   */\n  dup2\n    /* \"#utility.yul\":3431:3455   */\n  tag_53\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3424:3429   */\n  dup2\n    /* \"#utility.yul\":3421:3456   */\n  eq\n    /* \"#utility.yul\":3411:3413   */\n  tag_69\n  jumpi\n    /* \"#utility.yul\":3470:3471   */\n  0x00\n    /* \"#utility.yul\":3467:3468   */\n  dup1\n    /* \"#utility.yul\":3460:3472   */\n  revert\n    /* \"#utility.yul\":3411:3413   */\ntag_69:\n    /* \"#utility.yul\":3401:3480   */\n  pop\n  jump\t// out\n    /* \"contracts/01_ERC20_token.sol\":259:7104  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/01_ERC20_token.sol\":259:7104  contract ERC20 is Context, IERC20, IERC20Metadata {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/01_ERC20_token.sol\":947:1047  function name() public view virtual override returns (string memory) {\r... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_ERC20_token.sol\":2462:2672  function approve(address spender, uint256 amount)\r... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_ERC20_token.sol\":1382:1490  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_ERC20_token.sol\":2781:3310  function transferFrom(\r... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_ERC20_token.sol\":1245:1338  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_ERC20_token.sol\":3375:3672  function increaseAllowance(address spender, uint256 addedValue)\r... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_ERC20_token.sol\":1543:1720  function balanceOf(address account)\r... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_ERC20_token.sol\":1085:1189  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_ERC20_token.sol\":3737:4219  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_ERC20_token.sol\":1878:2094  function transfer(address recipient, uint256 amount)\r... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_ERC20_token.sol\":2187:2388  function allowance(address owner, address spender)\r... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/01_ERC20_token.sol\":947:1047  function name() public view virtual override returns (string memory) {\r... */\n    tag_16:\n        /* \"contracts/01_ERC20_token.sol\":1001:1014  string memory */\n      0x60\n        /* \"contracts/01_ERC20_token.sol\":1034:1039  _name */\n      0x03\n        /* \"contracts/01_ERC20_token.sol\":1027:1039  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":947:1047  function name() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":2462:2672  function approve(address spender, uint256 amount)\r... */\n    tag_22:\n        /* \"contracts/01_ERC20_token.sol\":2581:2585  bool */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":2603:2642  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"contracts/01_ERC20_token.sol\":2612:2624  _msgSender() */\n      tag_72\n        /* \"contracts/01_ERC20_token.sol\":2612:2622  _msgSender */\n      tag_73\n        /* \"contracts/01_ERC20_token.sol\":2612:2624  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \"contracts/01_ERC20_token.sol\":2626:2633  spender */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":2635:2641  amount */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":2603:2611  _approve */\n      tag_74\n        /* \"contracts/01_ERC20_token.sol\":2603:2642  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/01_ERC20_token.sol\":2660:2664  true */\n      0x01\n        /* \"contracts/01_ERC20_token.sol\":2653:2664  return true */\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":2462:2672  function approve(address spender, uint256 amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":1382:1490  function totalSupply() public view virtual override returns (uint256) {\r... */\n    tag_26:\n        /* \"contracts/01_ERC20_token.sol\":1443:1450  uint256 */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":1470:1482  _totalSupply */\n      sload(0x02)\n        /* \"contracts/01_ERC20_token.sol\":1463:1482  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":1382:1490  function totalSupply() public view virtual override returns (uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":2781:3310  function transferFrom(\r... */\n    tag_32:\n        /* \"contracts/01_ERC20_token.sol\":2921:2925  bool */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":2938:2974  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"contracts/01_ERC20_token.sol\":2948:2954  sender */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":2956:2965  recipient */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":2967:2973  amount */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":2938:2947  _transfer */\n      tag_78\n        /* \"contracts/01_ERC20_token.sol\":2938:2974  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n        /* \"contracts/01_ERC20_token.sol\":2987:3011  uint256 currentAllowance */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":3014:3025  _allowances */\n      0x01\n        /* \"contracts/01_ERC20_token.sol\":3014:3033  _allowances[sender] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":3026:3032  sender */\n      dup7\n        /* \"contracts/01_ERC20_token.sol\":3014:3033  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/01_ERC20_token.sol\":3014:3047  _allowances[sender][_msgSender()] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":3034:3046  _msgSender() */\n      tag_79\n        /* \"contracts/01_ERC20_token.sol\":3034:3044  _msgSender */\n      tag_73\n        /* \"contracts/01_ERC20_token.sol\":3034:3046  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \"contracts/01_ERC20_token.sol\":3014:3047  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/01_ERC20_token.sol\":2987:3047  uint256 currentAllowance = _allowances[sender][_msgSender()] */\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":3100:3106  amount */\n      dup3\n        /* \"contracts/01_ERC20_token.sol\":3080:3096  currentAllowance */\n      dup2\n        /* \"contracts/01_ERC20_token.sol\":3080:3106  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/01_ERC20_token.sol\":3058:3174  require(\r... */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/01_ERC20_token.sol\":3210:3267  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"contracts/01_ERC20_token.sol\":3219:3225  sender */\n      dup6\n        /* \"contracts/01_ERC20_token.sol\":3227:3239  _msgSender() */\n      tag_84\n        /* \"contracts/01_ERC20_token.sol\":3227:3237  _msgSender */\n      tag_73\n        /* \"contracts/01_ERC20_token.sol\":3227:3239  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/01_ERC20_token.sol\":3260:3266  amount */\n      dup6\n        /* \"contracts/01_ERC20_token.sol\":3241:3257  currentAllowance */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":3241:3266  currentAllowance - amount */\n      sub\n        /* \"contracts/01_ERC20_token.sol\":3210:3218  _approve */\n      tag_74\n        /* \"contracts/01_ERC20_token.sol\":3210:3267  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n        /* \"contracts/01_ERC20_token.sol\":3298:3302  true */\n      0x01\n        /* \"contracts/01_ERC20_token.sol\":3291:3302  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/01_ERC20_token.sol\":2781:3310  function transferFrom(\r... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":1245:1338  function decimals() public view virtual override returns (uint8) {\r... */\n    tag_35:\n        /* \"contracts/01_ERC20_token.sol\":1303:1308  uint8 */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":1328:1330  18 */\n      0x12\n        /* \"contracts/01_ERC20_token.sol\":1321:1330  return 18 */\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":1245:1338  function decimals() public view virtual override returns (uint8) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":3375:3672  function increaseAllowance(address spender, uint256 addedValue)\r... */\n    tag_40:\n        /* \"contracts/01_ERC20_token.sol\":3490:3494  bool */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":3512:3642  _approve(\r... */\n      tag_87\n        /* \"contracts/01_ERC20_token.sol\":3535:3547  _msgSender() */\n      tag_88\n        /* \"contracts/01_ERC20_token.sol\":3535:3545  _msgSender */\n      tag_73\n        /* \"contracts/01_ERC20_token.sol\":3535:3547  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"contracts/01_ERC20_token.sol\":3562:3569  spender */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":3621:3631  addedValue */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":3584:3595  _allowances */\n      0x01\n        /* \"contracts/01_ERC20_token.sol\":3584:3609  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":3596:3608  _msgSender() */\n      tag_89\n        /* \"contracts/01_ERC20_token.sol\":3596:3606  _msgSender */\n      tag_73\n        /* \"contracts/01_ERC20_token.sol\":3596:3608  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"contracts/01_ERC20_token.sol\":3584:3609  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/01_ERC20_token.sol\":3584:3618  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":3610:3617  spender */\n      dup9\n        /* \"contracts/01_ERC20_token.sol\":3584:3618  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/01_ERC20_token.sol\":3584:3631  _allowances[_msgSender()][spender] + addedValue */\n      tag_90\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n        /* \"contracts/01_ERC20_token.sol\":3512:3520  _approve */\n      tag_74\n        /* \"contracts/01_ERC20_token.sol\":3512:3642  _approve(\r... */\n      jump\t// in\n    tag_87:\n        /* \"contracts/01_ERC20_token.sol\":3660:3664  true */\n      0x01\n        /* \"contracts/01_ERC20_token.sol\":3653:3664  return true */\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":3375:3672  function increaseAllowance(address spender, uint256 addedValue)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":1543:1720  function balanceOf(address account)\r... */\n    tag_45:\n        /* \"contracts/01_ERC20_token.sol\":1662:1669  uint256 */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":1694:1703  _balances */\n      dup1\n        /* \"contracts/01_ERC20_token.sol\":1694:1712  _balances[account] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":1704:1711  account */\n      dup4\n        /* \"contracts/01_ERC20_token.sol\":1694:1712  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/01_ERC20_token.sol\":1687:1712  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":1543:1720  function balanceOf(address account)\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":1085:1189  function symbol() public view virtual override returns (string memory) {\r... */\n    tag_48:\n        /* \"contracts/01_ERC20_token.sol\":1141:1154  string memory */\n      0x60\n        /* \"contracts/01_ERC20_token.sol\":1174:1181  _symbol */\n      0x04\n        /* \"contracts/01_ERC20_token.sol\":1167:1181  return _symbol */\n      dup1\n      sload\n      tag_94\n      swap1\n      tag_65\n      jump\t// in\n    tag_94:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_65\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":1085:1189  function symbol() public view virtual override returns (string memory) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":3737:4219  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n    tag_52:\n        /* \"contracts/01_ERC20_token.sol\":3857:3861  bool */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":3879:3903  uint256 currentAllowance */\n      dup1\n        /* \"contracts/01_ERC20_token.sol\":3906:3917  _allowances */\n      0x01\n        /* \"contracts/01_ERC20_token.sol\":3906:3931  _allowances[_msgSender()] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":3918:3930  _msgSender() */\n      tag_100\n        /* \"contracts/01_ERC20_token.sol\":3918:3928  _msgSender */\n      tag_73\n        /* \"contracts/01_ERC20_token.sol\":3918:3930  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/01_ERC20_token.sol\":3906:3931  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/01_ERC20_token.sol\":3906:3940  _allowances[_msgSender()][spender] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":3932:3939  spender */\n      dup6\n        /* \"contracts/01_ERC20_token.sol\":3906:3940  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/01_ERC20_token.sol\":3879:3940  uint256 currentAllowance = _allowances[_msgSender()][spender] */\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":3993:4008  subtractedValue */\n      dup3\n        /* \"contracts/01_ERC20_token.sol\":3973:3989  currentAllowance */\n      dup2\n        /* \"contracts/01_ERC20_token.sol\":3973:4008  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/01_ERC20_token.sol\":3951:4073  require(\r... */\n      tag_101\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n        /* \"contracts/01_ERC20_token.sol\":4109:4176  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_104\n        /* \"contracts/01_ERC20_token.sol\":4118:4130  _msgSender() */\n      tag_105\n        /* \"contracts/01_ERC20_token.sol\":4118:4128  _msgSender */\n      tag_73\n        /* \"contracts/01_ERC20_token.sol\":4118:4130  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/01_ERC20_token.sol\":4132:4139  spender */\n      dup6\n        /* \"contracts/01_ERC20_token.sol\":4160:4175  subtractedValue */\n      dup6\n        /* \"contracts/01_ERC20_token.sol\":4141:4157  currentAllowance */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":4141:4175  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/01_ERC20_token.sol\":4109:4117  _approve */\n      tag_74\n        /* \"contracts/01_ERC20_token.sol\":4109:4176  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/01_ERC20_token.sol\":4207:4211  true */\n      0x01\n        /* \"contracts/01_ERC20_token.sol\":4200:4211  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/01_ERC20_token.sol\":3737:4219  function decreaseAllowance(address spender, uint256 subtractedValue)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":1878:2094  function transfer(address recipient, uint256 amount)\r... */\n    tag_56:\n        /* \"contracts/01_ERC20_token.sol\":2000:2004  bool */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":2022:2064  _transfer(_msgSender(), recipient, amount) */\n      tag_107\n        /* \"contracts/01_ERC20_token.sol\":2032:2044  _msgSender() */\n      tag_108\n        /* \"contracts/01_ERC20_token.sol\":2032:2042  _msgSender */\n      tag_73\n        /* \"contracts/01_ERC20_token.sol\":2032:2044  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/01_ERC20_token.sol\":2046:2055  recipient */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":2057:2063  amount */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":2022:2031  _transfer */\n      tag_78\n        /* \"contracts/01_ERC20_token.sol\":2022:2064  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/01_ERC20_token.sol\":2082:2086  true */\n      0x01\n        /* \"contracts/01_ERC20_token.sol\":2075:2086  return true */\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":1878:2094  function transfer(address recipient, uint256 amount)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":2187:2388  function allowance(address owner, address spender)\r... */\n    tag_61:\n        /* \"contracts/01_ERC20_token.sol\":2321:2328  uint256 */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":2353:2364  _allowances */\n      0x01\n        /* \"contracts/01_ERC20_token.sol\":2353:2371  _allowances[owner] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":2365:2370  owner */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":2353:2371  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/01_ERC20_token.sol\":2353:2380  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":2372:2379  spender */\n      dup4\n        /* \"contracts/01_ERC20_token.sol\":2353:2380  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/01_ERC20_token.sol\":2346:2380  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":2187:2388  function allowance(address owner, address spender)\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/abstracts/Context.sol\":480:578  function _msgSender() internal view virtual returns (address) {\r... */\n    tag_73:\n        /* \"contracts/abstracts/Context.sol\":533:540  address */\n      0x00\n        /* \"contracts/abstracts/Context.sol\":560:570  msg.sender */\n      caller\n        /* \"contracts/abstracts/Context.sol\":553:570  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/abstracts/Context.sol\":480:578  function _msgSender() internal view virtual returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":6304:6684  function _approve(\r... */\n    tag_74:\n        /* \"contracts/01_ERC20_token.sol\":6457:6458  0 */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":6440:6459  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/01_ERC20_token.sol\":6440:6445  owner */\n      dup4\n        /* \"contracts/01_ERC20_token.sol\":6440:6459  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/01_ERC20_token.sol\":6432:6500  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/01_ERC20_token.sol\":6538:6539  0 */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":6519:6540  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/01_ERC20_token.sol\":6519:6526  spender */\n      dup3\n        /* \"contracts/01_ERC20_token.sol\":6519:6540  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/01_ERC20_token.sol\":6511:6579  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/01_ERC20_token.sol\":6622:6628  amount */\n      dup1\n        /* \"contracts/01_ERC20_token.sol\":6592:6603  _allowances */\n      0x01\n        /* \"contracts/01_ERC20_token.sol\":6592:6610  _allowances[owner] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":6604:6609  owner */\n      dup6\n        /* \"contracts/01_ERC20_token.sol\":6592:6610  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/01_ERC20_token.sol\":6592:6619  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":6611:6618  spender */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":6592:6619  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/01_ERC20_token.sol\":6592:6628  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/01_ERC20_token.sol\":6660:6667  spender */\n      dup2\n        /* \"contracts/01_ERC20_token.sol\":6644:6676  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/01_ERC20_token.sol\":6653:6658  owner */\n      dup4\n        /* \"contracts/01_ERC20_token.sol\":6644:6676  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/01_ERC20_token.sol\":6669:6675  amount */\n      dup4\n        /* \"contracts/01_ERC20_token.sol\":6644:6676  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/01_ERC20_token.sol\":6304:6684  function _approve(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":4290:5060  function _transfer(\r... */\n    tag_78:\n        /* \"contracts/01_ERC20_token.sol\":4448:4449  0 */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":4430:4450  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/01_ERC20_token.sol\":4430:4436  sender */\n      dup4\n        /* \"contracts/01_ERC20_token.sol\":4430:4450  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/01_ERC20_token.sol\":4422:4492  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"contracts/01_ERC20_token.sol\":4532:4533  0 */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":4511:4534  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/01_ERC20_token.sol\":4511:4520  recipient */\n      dup3\n        /* \"contracts/01_ERC20_token.sol\":4511:4534  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/01_ERC20_token.sol\":4503:4574  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \"contracts/01_ERC20_token.sol\":4587:4634  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_126\n        /* \"contracts/01_ERC20_token.sol\":4608:4614  sender */\n      dup4\n        /* \"contracts/01_ERC20_token.sol\":4616:4625  recipient */\n      dup4\n        /* \"contracts/01_ERC20_token.sol\":4627:4633  amount */\n      dup4\n        /* \"contracts/01_ERC20_token.sol\":4587:4607  _beforeTokenTransfer */\n      tag_127\n        /* \"contracts/01_ERC20_token.sol\":4587:4634  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/01_ERC20_token.sol\":4647:4668  uint256 senderBalance */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":4671:4680  _balances */\n      dup1\n        /* \"contracts/01_ERC20_token.sol\":4671:4688  _balances[sender] */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":4681:4687  sender */\n      dup6\n        /* \"contracts/01_ERC20_token.sol\":4671:4688  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/01_ERC20_token.sol\":4647:4688  uint256 senderBalance = _balances[sender] */\n      swap1\n      pop\n        /* \"contracts/01_ERC20_token.sol\":4738:4744  amount */\n      dup2\n        /* \"contracts/01_ERC20_token.sol\":4721:4734  senderBalance */\n      dup2\n        /* \"contracts/01_ERC20_token.sol\":4721:4744  senderBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/01_ERC20_token.sol\":4699:4810  require(\r... */\n      tag_128\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_129\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_128:\n        /* \"contracts/01_ERC20_token.sol\":4882:4888  amount */\n      dup2\n        /* \"contracts/01_ERC20_token.sol\":4866:4879  senderBalance */\n      dup2\n        /* \"contracts/01_ERC20_token.sol\":4866:4888  senderBalance - amount */\n      sub\n        /* \"contracts/01_ERC20_token.sol\":4846:4855  _balances */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":4846:4863  _balances[sender] */\n      dup1\n        /* \"contracts/01_ERC20_token.sol\":4856:4862  sender */\n      dup7\n        /* \"contracts/01_ERC20_token.sol\":4846:4863  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/01_ERC20_token.sol\":4846:4888  _balances[sender] = senderBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/01_ERC20_token.sol\":4934:4940  amount */\n      dup2\n        /* \"contracts/01_ERC20_token.sol\":4910:4919  _balances */\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":4910:4930  _balances[recipient] */\n      dup1\n        /* \"contracts/01_ERC20_token.sol\":4920:4929  recipient */\n      dup6\n        /* \"contracts/01_ERC20_token.sol\":4910:4930  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/01_ERC20_token.sol\":4910:4940  _balances[recipient] += amount */\n      dup3\n      dup3\n      sload\n      tag_131\n      swap2\n      swap1\n      tag_91\n      jump\t// in\n    tag_131:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/01_ERC20_token.sol\":4975:4984  recipient */\n      dup3\n        /* \"contracts/01_ERC20_token.sol\":4958:4993  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/01_ERC20_token.sol\":4967:4973  sender */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":4958:4993  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/01_ERC20_token.sol\":4986:4992  amount */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":4958:4993  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_132\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/01_ERC20_token.sol\":5006:5052  _afterTokenTransfer(sender, recipient, amount) */\n      tag_133\n        /* \"contracts/01_ERC20_token.sol\":5026:5032  sender */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":5034:5043  recipient */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":5045:5051  amount */\n      dup5\n        /* \"contracts/01_ERC20_token.sol\":5006:5025  _afterTokenTransfer */\n      tag_134\n        /* \"contracts/01_ERC20_token.sol\":5006:5052  _afterTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/01_ERC20_token.sol\":4290:5060  function _transfer(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":6768:6893  function _beforeTokenTransfer(\r... */\n    tag_127:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/01_ERC20_token.sol\":6977:7101  function _afterTokenTransfer(\r... */\n    tag_134:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_138:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_140\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_142:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_144\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:559   */\n    tag_44:\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_147:\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":489:542   */\n      tag_148\n        /* \"#utility.yul\":534:541   */\n      dup5\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup6\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_138\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:552   */\n      pop\n        /* \"#utility.yul\":363:559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:972   */\n    tag_60:\n      0x00\n      dup1\n        /* \"#utility.yul\":690:692   */\n      0x40\n        /* \"#utility.yul\":678:687   */\n      dup4\n        /* \"#utility.yul\":669:676   */\n      dup6\n        /* \"#utility.yul\":665:688   */\n      sub\n        /* \"#utility.yul\":661:693   */\n      slt\n        /* \"#utility.yul\":658:660   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":706:707   */\n      0x00\n        /* \"#utility.yul\":703:704   */\n      dup1\n        /* \"#utility.yul\":696:708   */\n      revert\n        /* \"#utility.yul\":658:660   */\n    tag_150:\n        /* \"#utility.yul\":749:750   */\n      0x00\n        /* \"#utility.yul\":774:827   */\n      tag_151\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":810:816   */\n      dup3\n        /* \"#utility.yul\":799:808   */\n      dup7\n        /* \"#utility.yul\":795:817   */\n      add\n        /* \"#utility.yul\":774:827   */\n      tag_138\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":764:827   */\n      swap3\n      pop\n        /* \"#utility.yul\":720:837   */\n      pop\n        /* \"#utility.yul\":876:878   */\n      0x20\n        /* \"#utility.yul\":902:955   */\n      tag_152\n        /* \"#utility.yul\":947:954   */\n      dup6\n        /* \"#utility.yul\":938:944   */\n      dup3\n        /* \"#utility.yul\":927:936   */\n      dup7\n        /* \"#utility.yul\":923:945   */\n      add\n        /* \"#utility.yul\":902:955   */\n      tag_138\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":892:955   */\n      swap2\n      pop\n        /* \"#utility.yul\":847:965   */\n      pop\n        /* \"#utility.yul\":648:972   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":978:1530   */\n    tag_31:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1120:1122   */\n      0x60\n        /* \"#utility.yul\":1108:1117   */\n      dup5\n        /* \"#utility.yul\":1099:1106   */\n      dup7\n        /* \"#utility.yul\":1095:1118   */\n      sub\n        /* \"#utility.yul\":1091:1123   */\n      slt\n        /* \"#utility.yul\":1088:1090   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1136:1137   */\n      0x00\n        /* \"#utility.yul\":1133:1134   */\n      dup1\n        /* \"#utility.yul\":1126:1138   */\n      revert\n        /* \"#utility.yul\":1088:1090   */\n    tag_154:\n        /* \"#utility.yul\":1179:1180   */\n      0x00\n        /* \"#utility.yul\":1204:1257   */\n      tag_155\n        /* \"#utility.yul\":1249:1256   */\n      dup7\n        /* \"#utility.yul\":1240:1246   */\n      dup3\n        /* \"#utility.yul\":1229:1238   */\n      dup8\n        /* \"#utility.yul\":1225:1247   */\n      add\n        /* \"#utility.yul\":1204:1257   */\n      tag_138\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1194:1257   */\n      swap4\n      pop\n        /* \"#utility.yul\":1150:1267   */\n      pop\n        /* \"#utility.yul\":1306:1308   */\n      0x20\n        /* \"#utility.yul\":1332:1385   */\n      tag_156\n        /* \"#utility.yul\":1377:1384   */\n      dup7\n        /* \"#utility.yul\":1368:1374   */\n      dup3\n        /* \"#utility.yul\":1357:1366   */\n      dup8\n        /* \"#utility.yul\":1353:1375   */\n      add\n        /* \"#utility.yul\":1332:1385   */\n      tag_138\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1322:1385   */\n      swap3\n      pop\n        /* \"#utility.yul\":1277:1395   */\n      pop\n        /* \"#utility.yul\":1434:1436   */\n      0x40\n        /* \"#utility.yul\":1460:1513   */\n      tag_157\n        /* \"#utility.yul\":1505:1512   */\n      dup7\n        /* \"#utility.yul\":1496:1502   */\n      dup3\n        /* \"#utility.yul\":1485:1494   */\n      dup8\n        /* \"#utility.yul\":1481:1503   */\n      add\n        /* \"#utility.yul\":1460:1513   */\n      tag_142\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1450:1513   */\n      swap2\n      pop\n        /* \"#utility.yul\":1405:1523   */\n      pop\n        /* \"#utility.yul\":1078:1530   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1536:1943   */\n    tag_21:\n      0x00\n      dup1\n        /* \"#utility.yul\":1661:1663   */\n      0x40\n        /* \"#utility.yul\":1649:1658   */\n      dup4\n        /* \"#utility.yul\":1640:1647   */\n      dup6\n        /* \"#utility.yul\":1636:1659   */\n      sub\n        /* \"#utility.yul\":1632:1664   */\n      slt\n        /* \"#utility.yul\":1629:1631   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1629:1631   */\n    tag_159:\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1745:1798   */\n      tag_160\n        /* \"#utility.yul\":1790:1797   */\n      dup6\n        /* \"#utility.yul\":1781:1787   */\n      dup3\n        /* \"#utility.yul\":1770:1779   */\n      dup7\n        /* \"#utility.yul\":1766:1788   */\n      add\n        /* \"#utility.yul\":1745:1798   */\n      tag_138\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":1735:1798   */\n      swap3\n      pop\n        /* \"#utility.yul\":1691:1808   */\n      pop\n        /* \"#utility.yul\":1847:1849   */\n      0x20\n        /* \"#utility.yul\":1873:1926   */\n      tag_161\n        /* \"#utility.yul\":1918:1925   */\n      dup6\n        /* \"#utility.yul\":1909:1915   */\n      dup3\n        /* \"#utility.yul\":1898:1907   */\n      dup7\n        /* \"#utility.yul\":1894:1916   */\n      add\n        /* \"#utility.yul\":1873:1926   */\n      tag_142\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1863:1926   */\n      swap2\n      pop\n        /* \"#utility.yul\":1818:1936   */\n      pop\n        /* \"#utility.yul\":1619:1943   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2058   */\n    tag_162:\n        /* \"#utility.yul\":2030:2051   */\n      tag_164\n        /* \"#utility.yul\":2045:2050   */\n      dup2\n        /* \"#utility.yul\":2030:2051   */\n      tag_165\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2025:2028   */\n      dup3\n        /* \"#utility.yul\":2018:2052   */\n      mstore\n        /* \"#utility.yul\":2008:2058   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2064:2428   */\n    tag_166:\n      0x00\n        /* \"#utility.yul\":2180:2219   */\n      tag_168\n        /* \"#utility.yul\":2213:2218   */\n      dup3\n        /* \"#utility.yul\":2180:2219   */\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":2235:2306   */\n      tag_170\n        /* \"#utility.yul\":2299:2305   */\n      dup2\n        /* \"#utility.yul\":2294:2297   */\n      dup6\n        /* \"#utility.yul\":2235:2306   */\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":2228:2306   */\n      swap4\n      pop\n        /* \"#utility.yul\":2315:2367   */\n      tag_172\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2315:2367   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":2392:2421   */\n      tag_174\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_175\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2156:2428   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2801   */\n    tag_176:\n      0x00\n        /* \"#utility.yul\":2597:2664   */\n      tag_178\n        /* \"#utility.yul\":2661:2663   */\n      0x23\n        /* \"#utility.yul\":2656:2659   */\n      dup4\n        /* \"#utility.yul\":2597:2664   */\n      tag_171\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2590:2664   */\n      swap2\n      pop\n        /* \"#utility.yul\":2694:2728   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2690:2691   */\n      0x00\n        /* \"#utility.yul\":2685:2688   */\n      dup4\n        /* \"#utility.yul\":2681:2692   */\n      add\n        /* \"#utility.yul\":2674:2729   */\n      mstore\n        /* \"#utility.yul\":2760:2765   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2755:2757   */\n      0x20\n        /* \"#utility.yul\":2750:2753   */\n      dup4\n        /* \"#utility.yul\":2746:2758   */\n      add\n        /* \"#utility.yul\":2739:2766   */\n      mstore\n        /* \"#utility.yul\":2792:2794   */\n      0x40\n        /* \"#utility.yul\":2787:2790   */\n      dup3\n        /* \"#utility.yul\":2783:2795   */\n      add\n        /* \"#utility.yul\":2776:2795   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2807:3173   */\n    tag_179:\n      0x00\n        /* \"#utility.yul\":2970:3037   */\n      tag_181\n        /* \"#utility.yul\":3034:3036   */\n      0x22\n        /* \"#utility.yul\":3029:3032   */\n      dup4\n        /* \"#utility.yul\":2970:3037   */\n      tag_171\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":2963:3037   */\n      swap2\n      pop\n        /* \"#utility.yul\":3067:3101   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3063:3064   */\n      0x00\n        /* \"#utility.yul\":3058:3061   */\n      dup4\n        /* \"#utility.yul\":3054:3065   */\n      add\n        /* \"#utility.yul\":3047:3102   */\n      mstore\n        /* \"#utility.yul\":3133:3137   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3123:3126   */\n      dup4\n        /* \"#utility.yul\":3119:3131   */\n      add\n        /* \"#utility.yul\":3112:3138   */\n      mstore\n        /* \"#utility.yul\":3164:3166   */\n      0x40\n        /* \"#utility.yul\":3159:3162   */\n      dup3\n        /* \"#utility.yul\":3155:3167   */\n      add\n        /* \"#utility.yul\":3148:3167   */\n      swap1\n      pop\n        /* \"#utility.yul\":2953:3173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3179:3549   */\n    tag_182:\n      0x00\n        /* \"#utility.yul\":3342:3409   */\n      tag_184\n        /* \"#utility.yul\":3406:3408   */\n      0x26\n        /* \"#utility.yul\":3401:3404   */\n      dup4\n        /* \"#utility.yul\":3342:3409   */\n      tag_171\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":3335:3409   */\n      swap2\n      pop\n        /* \"#utility.yul\":3439:3473   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3435:3436   */\n      0x00\n        /* \"#utility.yul\":3430:3433   */\n      dup4\n        /* \"#utility.yul\":3426:3437   */\n      add\n        /* \"#utility.yul\":3419:3474   */\n      mstore\n        /* \"#utility.yul\":3505:3513   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3500:3502   */\n      0x20\n        /* \"#utility.yul\":3495:3498   */\n      dup4\n        /* \"#utility.yul\":3491:3503   */\n      add\n        /* \"#utility.yul\":3484:3514   */\n      mstore\n        /* \"#utility.yul\":3540:3542   */\n      0x40\n        /* \"#utility.yul\":3535:3538   */\n      dup3\n        /* \"#utility.yul\":3531:3543   */\n      add\n        /* \"#utility.yul\":3524:3543   */\n      swap1\n      pop\n        /* \"#utility.yul\":3325:3549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3555:3927   */\n    tag_185:\n      0x00\n        /* \"#utility.yul\":3718:3785   */\n      tag_187\n        /* \"#utility.yul\":3782:3784   */\n      0x28\n        /* \"#utility.yul\":3777:3780   */\n      dup4\n        /* \"#utility.yul\":3718:3785   */\n      tag_171\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3711:3785   */\n      swap2\n      pop\n        /* \"#utility.yul\":3815:3849   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3811:3812   */\n      0x00\n        /* \"#utility.yul\":3806:3809   */\n      dup4\n        /* \"#utility.yul\":3802:3813   */\n      add\n        /* \"#utility.yul\":3795:3850   */\n      mstore\n        /* \"#utility.yul\":3881:3891   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3876:3878   */\n      0x20\n        /* \"#utility.yul\":3871:3874   */\n      dup4\n        /* \"#utility.yul\":3867:3879   */\n      add\n        /* \"#utility.yul\":3860:3892   */\n      mstore\n        /* \"#utility.yul\":3918:3920   */\n      0x40\n        /* \"#utility.yul\":3913:3916   */\n      dup3\n        /* \"#utility.yul\":3909:3921   */\n      add\n        /* \"#utility.yul\":3902:3921   */\n      swap1\n      pop\n        /* \"#utility.yul\":3701:3927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3933:4302   */\n    tag_188:\n      0x00\n        /* \"#utility.yul\":4096:4163   */\n      tag_190\n        /* \"#utility.yul\":4160:4162   */\n      0x25\n        /* \"#utility.yul\":4155:4158   */\n      dup4\n        /* \"#utility.yul\":4096:4163   */\n      tag_171\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":4089:4163   */\n      swap2\n      pop\n        /* \"#utility.yul\":4193:4227   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4189:4190   */\n      0x00\n        /* \"#utility.yul\":4184:4187   */\n      dup4\n        /* \"#utility.yul\":4180:4191   */\n      add\n        /* \"#utility.yul\":4173:4228   */\n      mstore\n        /* \"#utility.yul\":4259:4266   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4254:4256   */\n      0x20\n        /* \"#utility.yul\":4249:4252   */\n      dup4\n        /* \"#utility.yul\":4245:4257   */\n      add\n        /* \"#utility.yul\":4238:4267   */\n      mstore\n        /* \"#utility.yul\":4293:4295   */\n      0x40\n        /* \"#utility.yul\":4288:4291   */\n      dup3\n        /* \"#utility.yul\":4284:4296   */\n      add\n        /* \"#utility.yul\":4277:4296   */\n      swap1\n      pop\n        /* \"#utility.yul\":4079:4302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4308:4676   */\n    tag_191:\n      0x00\n        /* \"#utility.yul\":4471:4538   */\n      tag_193\n        /* \"#utility.yul\":4535:4537   */\n      0x24\n        /* \"#utility.yul\":4530:4533   */\n      dup4\n        /* \"#utility.yul\":4471:4538   */\n      tag_171\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":4464:4538   */\n      swap2\n      pop\n        /* \"#utility.yul\":4568:4602   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4564:4565   */\n      0x00\n        /* \"#utility.yul\":4559:4562   */\n      dup4\n        /* \"#utility.yul\":4555:4566   */\n      add\n        /* \"#utility.yul\":4548:4603   */\n      mstore\n        /* \"#utility.yul\":4634:4640   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4629:4631   */\n      0x20\n        /* \"#utility.yul\":4624:4627   */\n      dup4\n        /* \"#utility.yul\":4620:4632   */\n      add\n        /* \"#utility.yul\":4613:4641   */\n      mstore\n        /* \"#utility.yul\":4667:4669   */\n      0x40\n        /* \"#utility.yul\":4662:4665   */\n      dup3\n        /* \"#utility.yul\":4658:4670   */\n      add\n        /* \"#utility.yul\":4651:4670   */\n      swap1\n      pop\n        /* \"#utility.yul\":4454:4676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4682:5051   */\n    tag_194:\n      0x00\n        /* \"#utility.yul\":4845:4912   */\n      tag_196\n        /* \"#utility.yul\":4909:4911   */\n      0x25\n        /* \"#utility.yul\":4904:4907   */\n      dup4\n        /* \"#utility.yul\":4845:4912   */\n      tag_171\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":4838:4912   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:4976   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4938:4939   */\n      0x00\n        /* \"#utility.yul\":4933:4936   */\n      dup4\n        /* \"#utility.yul\":4929:4940   */\n      add\n        /* \"#utility.yul\":4922:4977   */\n      mstore\n        /* \"#utility.yul\":5008:5015   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5003:5005   */\n      0x20\n        /* \"#utility.yul\":4998:5001   */\n      dup4\n        /* \"#utility.yul\":4994:5006   */\n      add\n        /* \"#utility.yul\":4987:5016   */\n      mstore\n        /* \"#utility.yul\":5042:5044   */\n      0x40\n        /* \"#utility.yul\":5037:5040   */\n      dup3\n        /* \"#utility.yul\":5033:5045   */\n      add\n        /* \"#utility.yul\":5026:5045   */\n      swap1\n      pop\n        /* \"#utility.yul\":4828:5051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5057:5175   */\n    tag_197:\n        /* \"#utility.yul\":5144:5168   */\n      tag_199\n        /* \"#utility.yul\":5162:5167   */\n      dup2\n        /* \"#utility.yul\":5144:5168   */\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":5139:5142   */\n      dup3\n        /* \"#utility.yul\":5132:5169   */\n      mstore\n        /* \"#utility.yul\":5122:5175   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5181:5293   */\n    tag_201:\n        /* \"#utility.yul\":5264:5286   */\n      tag_203\n        /* \"#utility.yul\":5280:5285   */\n      dup2\n        /* \"#utility.yul\":5264:5286   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":5259:5262   */\n      dup3\n        /* \"#utility.yul\":5252:5287   */\n      mstore\n        /* \"#utility.yul\":5242:5293   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5299:5509   */\n    tag_24:\n      0x00\n        /* \"#utility.yul\":5424:5426   */\n      0x20\n        /* \"#utility.yul\":5413:5422   */\n      dup3\n        /* \"#utility.yul\":5409:5427   */\n      add\n        /* \"#utility.yul\":5401:5427   */\n      swap1\n      pop\n        /* \"#utility.yul\":5437:5502   */\n      tag_206\n        /* \"#utility.yul\":5499:5500   */\n      0x00\n        /* \"#utility.yul\":5488:5497   */\n      dup4\n        /* \"#utility.yul\":5484:5501   */\n      add\n        /* \"#utility.yul\":5475:5481   */\n      dup5\n        /* \"#utility.yul\":5437:5502   */\n      tag_162\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":5391:5509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5515:5828   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":5666:5668   */\n      0x20\n        /* \"#utility.yul\":5655:5664   */\n      dup3\n        /* \"#utility.yul\":5651:5669   */\n      add\n        /* \"#utility.yul\":5643:5669   */\n      swap1\n      pop\n        /* \"#utility.yul\":5715:5724   */\n      dup2\n        /* \"#utility.yul\":5709:5713   */\n      dup2\n        /* \"#utility.yul\":5705:5725   */\n      sub\n        /* \"#utility.yul\":5701:5702   */\n      0x00\n        /* \"#utility.yul\":5690:5699   */\n      dup4\n        /* \"#utility.yul\":5686:5703   */\n      add\n        /* \"#utility.yul\":5679:5726   */\n      mstore\n        /* \"#utility.yul\":5743:5821   */\n      tag_208\n        /* \"#utility.yul\":5816:5820   */\n      dup2\n        /* \"#utility.yul\":5807:5813   */\n      dup5\n        /* \"#utility.yul\":5743:5821   */\n      tag_166\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":5735:5821   */\n      swap1\n      pop\n        /* \"#utility.yul\":5633:5828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5834:6253   */\n    tag_125:\n      0x00\n        /* \"#utility.yul\":6038:6040   */\n      0x20\n        /* \"#utility.yul\":6027:6036   */\n      dup3\n        /* \"#utility.yul\":6023:6041   */\n      add\n        /* \"#utility.yul\":6015:6041   */\n      swap1\n      pop\n        /* \"#utility.yul\":6087:6096   */\n      dup2\n        /* \"#utility.yul\":6081:6085   */\n      dup2\n        /* \"#utility.yul\":6077:6097   */\n      sub\n        /* \"#utility.yul\":6073:6074   */\n      0x00\n        /* \"#utility.yul\":6062:6071   */\n      dup4\n        /* \"#utility.yul\":6058:6075   */\n      add\n        /* \"#utility.yul\":6051:6098   */\n      mstore\n        /* \"#utility.yul\":6115:6246   */\n      tag_210\n        /* \"#utility.yul\":6241:6245   */\n      dup2\n        /* \"#utility.yul\":6115:6246   */\n      tag_176\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":6107:6246   */\n      swap1\n      pop\n        /* \"#utility.yul\":6005:6253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6259:6678   */\n    tag_117:\n      0x00\n        /* \"#utility.yul\":6463:6465   */\n      0x20\n        /* \"#utility.yul\":6452:6461   */\n      dup3\n        /* \"#utility.yul\":6448:6466   */\n      add\n        /* \"#utility.yul\":6440:6466   */\n      swap1\n      pop\n        /* \"#utility.yul\":6512:6521   */\n      dup2\n        /* \"#utility.yul\":6506:6510   */\n      dup2\n        /* \"#utility.yul\":6502:6522   */\n      sub\n        /* \"#utility.yul\":6498:6499   */\n      0x00\n        /* \"#utility.yul\":6487:6496   */\n      dup4\n        /* \"#utility.yul\":6483:6500   */\n      add\n        /* \"#utility.yul\":6476:6523   */\n      mstore\n        /* \"#utility.yul\":6540:6671   */\n      tag_212\n        /* \"#utility.yul\":6666:6670   */\n      dup2\n        /* \"#utility.yul\":6540:6671   */\n      tag_179\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":6532:6671   */\n      swap1\n      pop\n        /* \"#utility.yul\":6430:6678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6684:7103   */\n    tag_130:\n      0x00\n        /* \"#utility.yul\":6888:6890   */\n      0x20\n        /* \"#utility.yul\":6877:6886   */\n      dup3\n        /* \"#utility.yul\":6873:6891   */\n      add\n        /* \"#utility.yul\":6865:6891   */\n      swap1\n      pop\n        /* \"#utility.yul\":6937:6946   */\n      dup2\n        /* \"#utility.yul\":6931:6935   */\n      dup2\n        /* \"#utility.yul\":6927:6947   */\n      sub\n        /* \"#utility.yul\":6923:6924   */\n      0x00\n        /* \"#utility.yul\":6912:6921   */\n      dup4\n        /* \"#utility.yul\":6908:6925   */\n      add\n        /* \"#utility.yul\":6901:6948   */\n      mstore\n        /* \"#utility.yul\":6965:7096   */\n      tag_214\n        /* \"#utility.yul\":7091:7095   */\n      dup2\n        /* \"#utility.yul\":6965:7096   */\n      tag_182\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":6957:7096   */\n      swap1\n      pop\n        /* \"#utility.yul\":6855:7103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7109:7528   */\n    tag_82:\n      0x00\n        /* \"#utility.yul\":7313:7315   */\n      0x20\n        /* \"#utility.yul\":7302:7311   */\n      dup3\n        /* \"#utility.yul\":7298:7316   */\n      add\n        /* \"#utility.yul\":7290:7316   */\n      swap1\n      pop\n        /* \"#utility.yul\":7362:7371   */\n      dup2\n        /* \"#utility.yul\":7356:7360   */\n      dup2\n        /* \"#utility.yul\":7352:7372   */\n      sub\n        /* \"#utility.yul\":7348:7349   */\n      0x00\n        /* \"#utility.yul\":7337:7346   */\n      dup4\n        /* \"#utility.yul\":7333:7350   */\n      add\n        /* \"#utility.yul\":7326:7373   */\n      mstore\n        /* \"#utility.yul\":7390:7521   */\n      tag_216\n        /* \"#utility.yul\":7516:7520   */\n      dup2\n        /* \"#utility.yul\":7390:7521   */\n      tag_185\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":7382:7521   */\n      swap1\n      pop\n        /* \"#utility.yul\":7280:7528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7534:7953   */\n    tag_122:\n      0x00\n        /* \"#utility.yul\":7738:7740   */\n      0x20\n        /* \"#utility.yul\":7727:7736   */\n      dup3\n        /* \"#utility.yul\":7723:7741   */\n      add\n        /* \"#utility.yul\":7715:7741   */\n      swap1\n      pop\n        /* \"#utility.yul\":7787:7796   */\n      dup2\n        /* \"#utility.yul\":7781:7785   */\n      dup2\n        /* \"#utility.yul\":7777:7797   */\n      sub\n        /* \"#utility.yul\":7773:7774   */\n      0x00\n        /* \"#utility.yul\":7762:7771   */\n      dup4\n        /* \"#utility.yul\":7758:7775   */\n      add\n        /* \"#utility.yul\":7751:7798   */\n      mstore\n        /* \"#utility.yul\":7815:7946   */\n      tag_218\n        /* \"#utility.yul\":7941:7945   */\n      dup2\n        /* \"#utility.yul\":7815:7946   */\n      tag_188\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":7807:7946   */\n      swap1\n      pop\n        /* \"#utility.yul\":7705:7953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7959:8378   */\n    tag_114:\n      0x00\n        /* \"#utility.yul\":8163:8165   */\n      0x20\n        /* \"#utility.yul\":8152:8161   */\n      dup3\n        /* \"#utility.yul\":8148:8166   */\n      add\n        /* \"#utility.yul\":8140:8166   */\n      swap1\n      pop\n        /* \"#utility.yul\":8212:8221   */\n      dup2\n        /* \"#utility.yul\":8206:8210   */\n      dup2\n        /* \"#utility.yul\":8202:8222   */\n      sub\n        /* \"#utility.yul\":8198:8199   */\n      0x00\n        /* \"#utility.yul\":8187:8196   */\n      dup4\n        /* \"#utility.yul\":8183:8200   */\n      add\n        /* \"#utility.yul\":8176:8223   */\n      mstore\n        /* \"#utility.yul\":8240:8371   */\n      tag_220\n        /* \"#utility.yul\":8366:8370   */\n      dup2\n        /* \"#utility.yul\":8240:8371   */\n      tag_191\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":8232:8371   */\n      swap1\n      pop\n        /* \"#utility.yul\":8130:8378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8384:8803   */\n    tag_103:\n      0x00\n        /* \"#utility.yul\":8588:8590   */\n      0x20\n        /* \"#utility.yul\":8577:8586   */\n      dup3\n        /* \"#utility.yul\":8573:8591   */\n      add\n        /* \"#utility.yul\":8565:8591   */\n      swap1\n      pop\n        /* \"#utility.yul\":8637:8646   */\n      dup2\n        /* \"#utility.yul\":8631:8635   */\n      dup2\n        /* \"#utility.yul\":8627:8647   */\n      sub\n        /* \"#utility.yul\":8623:8624   */\n      0x00\n        /* \"#utility.yul\":8612:8621   */\n      dup4\n        /* \"#utility.yul\":8608:8625   */\n      add\n        /* \"#utility.yul\":8601:8648   */\n      mstore\n        /* \"#utility.yul\":8665:8796   */\n      tag_222\n        /* \"#utility.yul\":8791:8795   */\n      dup2\n        /* \"#utility.yul\":8665:8796   */\n      tag_194\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":8657:8796   */\n      swap1\n      pop\n        /* \"#utility.yul\":8555:8803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8809:9031   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":8940:8942   */\n      0x20\n        /* \"#utility.yul\":8929:8938   */\n      dup3\n        /* \"#utility.yul\":8925:8943   */\n      add\n        /* \"#utility.yul\":8917:8943   */\n      swap1\n      pop\n        /* \"#utility.yul\":8953:9024   */\n      tag_224\n        /* \"#utility.yul\":9021:9022   */\n      0x00\n        /* \"#utility.yul\":9010:9019   */\n      dup4\n        /* \"#utility.yul\":9006:9023   */\n      add\n        /* \"#utility.yul\":8997:9003   */\n      dup5\n        /* \"#utility.yul\":8953:9024   */\n      tag_197\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":8907:9031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9037:9251   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":9164:9166   */\n      0x20\n        /* \"#utility.yul\":9153:9162   */\n      dup3\n        /* \"#utility.yul\":9149:9167   */\n      add\n        /* \"#utility.yul\":9141:9167   */\n      swap1\n      pop\n        /* \"#utility.yul\":9177:9244   */\n      tag_226\n        /* \"#utility.yul\":9241:9242   */\n      0x00\n        /* \"#utility.yul\":9230:9239   */\n      dup4\n        /* \"#utility.yul\":9226:9243   */\n      add\n        /* \"#utility.yul\":9217:9223   */\n      dup5\n        /* \"#utility.yul\":9177:9244   */\n      tag_201\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":9131:9251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9257:9356   */\n    tag_169:\n      0x00\n        /* \"#utility.yul\":9343:9348   */\n      dup2\n        /* \"#utility.yul\":9337:9349   */\n      mload\n        /* \"#utility.yul\":9327:9349   */\n      swap1\n      pop\n        /* \"#utility.yul\":9316:9356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9362:9531   */\n    tag_171:\n      0x00\n        /* \"#utility.yul\":9480:9486   */\n      dup3\n        /* \"#utility.yul\":9475:9478   */\n      dup3\n        /* \"#utility.yul\":9468:9487   */\n      mstore\n        /* \"#utility.yul\":9520:9524   */\n      0x20\n        /* \"#utility.yul\":9515:9518   */\n      dup3\n        /* \"#utility.yul\":9511:9525   */\n      add\n        /* \"#utility.yul\":9496:9525   */\n      swap1\n      pop\n        /* \"#utility.yul\":9458:9531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9537:9842   */\n    tag_91:\n      0x00\n        /* \"#utility.yul\":9596:9616   */\n      tag_230\n        /* \"#utility.yul\":9614:9615   */\n      dup3\n        /* \"#utility.yul\":9596:9616   */\n      tag_200\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":9591:9616   */\n      swap2\n      pop\n        /* \"#utility.yul\":9630:9650   */\n      tag_231\n        /* \"#utility.yul\":9648:9649   */\n      dup4\n        /* \"#utility.yul\":9630:9650   */\n      tag_200\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9625:9650   */\n      swap3\n      pop\n        /* \"#utility.yul\":9784:9785   */\n      dup3\n        /* \"#utility.yul\":9716:9782   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9712:9786   */\n      sub\n        /* \"#utility.yul\":9709:9710   */\n      dup3\n        /* \"#utility.yul\":9706:9787   */\n      gt\n        /* \"#utility.yul\":9703:9705   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":9790:9808   */\n      tag_233\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":9703:9705   */\n    tag_232:\n        /* \"#utility.yul\":9834:9835   */\n      dup3\n        /* \"#utility.yul\":9831:9832   */\n      dup3\n        /* \"#utility.yul\":9827:9836   */\n      add\n        /* \"#utility.yul\":9820:9836   */\n      swap1\n      pop\n        /* \"#utility.yul\":9581:9842   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9848:9944   */\n    tag_235:\n      0x00\n        /* \"#utility.yul\":9914:9938   */\n      tag_237\n        /* \"#utility.yul\":9932:9937   */\n      dup3\n        /* \"#utility.yul\":9914:9938   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9903:9938   */\n      swap1\n      pop\n        /* \"#utility.yul\":9893:9944   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9950:10040   */\n    tag_165:\n      0x00\n        /* \"#utility.yul\":10027:10032   */\n      dup2\n        /* \"#utility.yul\":10020:10033   */\n      iszero\n        /* \"#utility.yul\":10013:10034   */\n      iszero\n        /* \"#utility.yul\":10002:10034   */\n      swap1\n      pop\n        /* \"#utility.yul\":9992:10040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10046:10172   */\n    tag_238:\n      0x00\n        /* \"#utility.yul\":10123:10165   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10116:10121   */\n      dup3\n        /* \"#utility.yul\":10112:10166   */\n      and\n        /* \"#utility.yul\":10101:10166   */\n      swap1\n      pop\n        /* \"#utility.yul\":10091:10172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10178:10255   */\n    tag_200:\n      0x00\n        /* \"#utility.yul\":10244:10249   */\n      dup2\n        /* \"#utility.yul\":10233:10249   */\n      swap1\n      pop\n        /* \"#utility.yul\":10223:10255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10261:10347   */\n    tag_204:\n      0x00\n        /* \"#utility.yul\":10336:10340   */\n      0xff\n        /* \"#utility.yul\":10329:10334   */\n      dup3\n        /* \"#utility.yul\":10325:10341   */\n      and\n        /* \"#utility.yul\":10314:10341   */\n      swap1\n      pop\n        /* \"#utility.yul\":10304:10347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10353:10660   */\n    tag_173:\n        /* \"#utility.yul\":10421:10422   */\n      0x00\n        /* \"#utility.yul\":10431:10544   */\n    tag_244:\n        /* \"#utility.yul\":10445:10451   */\n      dup4\n        /* \"#utility.yul\":10442:10443   */\n      dup2\n        /* \"#utility.yul\":10439:10452   */\n      lt\n        /* \"#utility.yul\":10431:10544   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":10530:10531   */\n      dup1\n        /* \"#utility.yul\":10525:10528   */\n      dup3\n        /* \"#utility.yul\":10521:10532   */\n      add\n        /* \"#utility.yul\":10515:10533   */\n      mload\n        /* \"#utility.yul\":10511:10512   */\n      dup2\n        /* \"#utility.yul\":10506:10509   */\n      dup5\n        /* \"#utility.yul\":10502:10513   */\n      add\n        /* \"#utility.yul\":10495:10534   */\n      mstore\n        /* \"#utility.yul\":10467:10469   */\n      0x20\n        /* \"#utility.yul\":10464:10465   */\n      dup2\n        /* \"#utility.yul\":10460:10470   */\n      add\n        /* \"#utility.yul\":10455:10470   */\n      swap1\n      pop\n        /* \"#utility.yul\":10431:10544   */\n      jump(tag_244)\n    tag_246:\n        /* \"#utility.yul\":10562:10568   */\n      dup4\n        /* \"#utility.yul\":10559:10560   */\n      dup2\n        /* \"#utility.yul\":10556:10569   */\n      gt\n        /* \"#utility.yul\":10553:10555   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":10642:10643   */\n      0x00\n        /* \"#utility.yul\":10633:10639   */\n      dup5\n        /* \"#utility.yul\":10628:10631   */\n      dup5\n        /* \"#utility.yul\":10624:10640   */\n      add\n        /* \"#utility.yul\":10617:10644   */\n      mstore\n        /* \"#utility.yul\":10553:10555   */\n    tag_247:\n        /* \"#utility.yul\":10402:10660   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10666:10986   */\n    tag_65:\n      0x00\n        /* \"#utility.yul\":10747:10748   */\n      0x02\n        /* \"#utility.yul\":10741:10745   */\n      dup3\n        /* \"#utility.yul\":10737:10749   */\n      div\n        /* \"#utility.yul\":10727:10749   */\n      swap1\n      pop\n        /* \"#utility.yul\":10794:10795   */\n      0x01\n        /* \"#utility.yul\":10788:10792   */\n      dup3\n        /* \"#utility.yul\":10784:10796   */\n      and\n        /* \"#utility.yul\":10815:10833   */\n      dup1\n        /* \"#utility.yul\":10805:10807   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":10871:10875   */\n      0x7f\n        /* \"#utility.yul\":10863:10869   */\n      dup3\n        /* \"#utility.yul\":10859:10876   */\n      and\n        /* \"#utility.yul\":10849:10876   */\n      swap2\n      pop\n        /* \"#utility.yul\":10805:10807   */\n    tag_249:\n        /* \"#utility.yul\":10933:10935   */\n      0x20\n        /* \"#utility.yul\":10925:10931   */\n      dup3\n        /* \"#utility.yul\":10922:10936   */\n      lt\n        /* \"#utility.yul\":10902:10920   */\n      dup2\n        /* \"#utility.yul\":10899:10937   */\n      eq\n        /* \"#utility.yul\":10896:10898   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":10952:10970   */\n      tag_251\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":10896:10898   */\n    tag_250:\n        /* \"#utility.yul\":10717:10986   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10992:11172   */\n    tag_234:\n        /* \"#utility.yul\":11040:11117   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11037:11038   */\n      0x00\n        /* \"#utility.yul\":11030:11118   */\n      mstore\n        /* \"#utility.yul\":11137:11141   */\n      0x11\n        /* \"#utility.yul\":11134:11135   */\n      0x04\n        /* \"#utility.yul\":11127:11142   */\n      mstore\n        /* \"#utility.yul\":11161:11165   */\n      0x24\n        /* \"#utility.yul\":11158:11159   */\n      0x00\n        /* \"#utility.yul\":11151:11166   */\n      revert\n        /* \"#utility.yul\":11178:11358   */\n    tag_252:\n        /* \"#utility.yul\":11226:11303   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11223:11224   */\n      0x00\n        /* \"#utility.yul\":11216:11304   */\n      mstore\n        /* \"#utility.yul\":11323:11327   */\n      0x22\n        /* \"#utility.yul\":11320:11321   */\n      0x04\n        /* \"#utility.yul\":11313:11328   */\n      mstore\n        /* \"#utility.yul\":11347:11351   */\n      0x24\n        /* \"#utility.yul\":11344:11345   */\n      0x00\n        /* \"#utility.yul\":11337:11352   */\n      revert\n        /* \"#utility.yul\":11364:11466   */\n    tag_175:\n      0x00\n        /* \"#utility.yul\":11456:11458   */\n      0x1f\n        /* \"#utility.yul\":11452:11459   */\n      not\n        /* \"#utility.yul\":11447:11449   */\n      0x1f\n        /* \"#utility.yul\":11440:11445   */\n      dup4\n        /* \"#utility.yul\":11436:11450   */\n      add\n        /* \"#utility.yul\":11432:11460   */\n      and\n        /* \"#utility.yul\":11422:11460   */\n      swap1\n      pop\n        /* \"#utility.yul\":11412:11466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11472:11594   */\n    tag_141:\n        /* \"#utility.yul\":11545:11569   */\n      tag_257\n        /* \"#utility.yul\":11563:11568   */\n      dup2\n        /* \"#utility.yul\":11545:11569   */\n      tag_235\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":11538:11543   */\n      dup2\n        /* \"#utility.yul\":11535:11570   */\n      eq\n        /* \"#utility.yul\":11525:11527   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":11584:11585   */\n      0x00\n        /* \"#utility.yul\":11581:11582   */\n      dup1\n        /* \"#utility.yul\":11574:11586   */\n      revert\n        /* \"#utility.yul\":11525:11527   */\n    tag_258:\n        /* \"#utility.yul\":11515:11594   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11600:11722   */\n    tag_145:\n        /* \"#utility.yul\":11673:11697   */\n      tag_260\n        /* \"#utility.yul\":11691:11696   */\n      dup2\n        /* \"#utility.yul\":11673:11697   */\n      tag_200\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":11666:11671   */\n      dup2\n        /* \"#utility.yul\":11663:11698   */\n      eq\n        /* \"#utility.yul\":11653:11655   */\n      tag_261\n      jumpi\n        /* \"#utility.yul\":11712:11713   */\n      0x00\n        /* \"#utility.yul\":11709:11710   */\n      dup1\n        /* \"#utility.yul\":11702:11714   */\n      revert\n        /* \"#utility.yul\":11653:11655   */\n    tag_261:\n        /* \"#utility.yul\":11643:11722   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e7358b1fb3dbdbe02b4fba01ae04e72a559377068eaef5cafde738fa5f269bbe64736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3483:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:258:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "178:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "136:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "136:49:5"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "121:14:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "202:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "209:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "195:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "195:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "195:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "225:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "240:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "247:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "236:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "236:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "229:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "290:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "299:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "302:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "292:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "292:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "292:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "271:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "276:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "285:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "264:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "264:25:5"
															},
															"nodeType": "YulIf",
															"src": "261:2:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "337:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "342:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "347:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "315:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "315:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "315:39:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:5",
														"type": ""
													}
												],
												"src": "7:353:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "453:215:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "502:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "511:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "514:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "504:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "504:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "504:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "481:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "489:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "477:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "477:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "496:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "466:35:5"
															},
															"nodeType": "YulIf",
															"src": "463:2:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "527:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "541:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "541:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "531:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "563:99:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "635:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "643:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "631:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "650:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "658:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "572:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "572:90:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "431:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "439:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "447:5:5",
														"type": ""
													}
												],
												"src": "380:288:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "737:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "747:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "762:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "756:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "747:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "805:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "778:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "778:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "715:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "723:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "731:5:5",
														"type": ""
													}
												],
												"src": "674:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "954:677:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1000:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1009:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1012:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1002:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1002:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1002:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "975:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "984:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "971:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "971:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "996:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "967:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "967:32:5"
															},
															"nodeType": "YulIf",
															"src": "964:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1026:224:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1041:38:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1065:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1076:1:5",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1061:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1061:17:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1055:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1055:24:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1045:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1126:16:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1135:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1138:1:5",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1128:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1128:12:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1128:12:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1098:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1106:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1095:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "1092:2:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1156:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1212:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1223:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1208:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1208:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1232:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1166:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1166:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1156:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1260:225:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1275:39:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1299:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1310:2:5",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1295:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1295:18:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1289:5:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1289:25:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1279:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1361:16:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1370:1:5",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1373:1:5",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1363:6:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1363:12:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1363:12:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1333:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1341:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1330:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1330:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "1327:2:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1391:84:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1447:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1458:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1443:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1443:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1467:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1401:41:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:74:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1391:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1495:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1510:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1514:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1540:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1586:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1597:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1582:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1606:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1550:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1540:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "908:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "919:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "931:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "939:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "947:6:5",
														"type": ""
													}
												],
												"src": "823:808:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1677:243:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1687:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1703:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1697:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1697:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1737:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1745:4:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1733:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1733:17:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1719:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1861:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1863:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1863:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1863:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1804:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1816:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1801:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1801:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1840:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1852:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1837:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1798:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:62:5"
															},
															"nodeType": "YulIf",
															"src": "1795:2:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1899:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1903:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1892:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1892:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1892:22:5"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1661:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1670:6:5",
														"type": ""
													}
												],
												"src": "1637:283:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1993:265:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2098:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2100:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2100:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2100:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2070:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2078:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2067:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2067:30:5"
															},
															"nodeType": "YulIf",
															"src": "2064:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2150:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2166:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2174:4:5",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2162:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2162:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2185:4:5",
																				"type": "",
																				"value": "0x1f"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2181:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2181:9:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2158:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2158:33:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2150:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2228:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2240:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2246:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2236:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2228:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1977:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1988:4:5",
														"type": ""
													}
												],
												"src": "1926:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2319:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2330:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2319:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2291:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2301:7:5",
														"type": ""
													}
												],
												"src": "2264:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2396:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2406:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2415:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2410:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2475:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2500:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2505:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2496:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2496:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2519:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2524:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2515:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2515:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2509:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2509:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2489:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2489:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2489:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2436:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2439:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2433:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2433:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2447:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2449:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2458:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2461:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2454:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2454:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2449:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2429:3:5",
																"statements": []
															},
															"src": "2425:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2572:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2622:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2627:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2618:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2618:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2636:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2611:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2611:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2611:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2553:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2556:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2550:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2550:13:5"
															},
															"nodeType": "YulIf",
															"src": "2547:2:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2378:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2383:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2388:6:5",
														"type": ""
													}
												],
												"src": "2347:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2711:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2721:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2741:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2731:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2731:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2721:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2752:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2782:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2788:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2778:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2756:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2829:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2843:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2857:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2865:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2853:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2853:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2843:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2809:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2802:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2802:26:5"
															},
															"nodeType": "YulIf",
															"src": "2799:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2932:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "2946:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2946:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2946:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2896:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2919:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2927:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2916:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2916:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2893:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2893:38:5"
															},
															"nodeType": "YulIf",
															"src": "2890:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2695:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2704:6:5",
														"type": ""
													}
												],
												"src": "2660:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3014:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3031:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3034:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3024:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3131:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3121:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3121:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3121:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3152:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3155:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3145:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3145:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3145:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "2986:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3200:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3217:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3220:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3210:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3210:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3210:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3314:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3317:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3307:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3307:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3307:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3338:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3341:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3331:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3331:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3331:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3172:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3401:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3458:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3467:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3470:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3460:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3460:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3460:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3424:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3449:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3431:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3431:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3421:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3421:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3414:43:5"
															},
															"nodeType": "YulIf",
															"src": "3411:2:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3394:5:5",
														"type": ""
													}
												],
												"src": "3358:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620016e2380380620016e28339818101604052810190620000379190620001b4565b82600390805190602001906200004f9291906200007b565b508160049080519060200190620000689291906200007b565b5060025460028190555050505062000391565b8280546200008990620002e3565b90600052602060002090601f016020900481019282620000ad5760008555620000f9565b82601f10620000c857805160ff1916838001178555620000f9565b82800160010185558215620000f9579182015b82811115620000f8578251825591602001919060010190620000db565b5b5090506200010891906200010c565b5090565b5b80821115620001275760008160009055506001016200010d565b5090565b6000620001426200013c8462000270565b6200023c565b9050828152602081018484840111156200015b57600080fd5b62000168848285620002ad565b509392505050565b600082601f8301126200018257600080fd5b8151620001948482602086016200012b565b91505092915050565b600081519050620001ae8162000377565b92915050565b600080600060608486031215620001ca57600080fd5b600084015167ffffffffffffffff811115620001e557600080fd5b620001f38682870162000170565b935050602084015167ffffffffffffffff8111156200021157600080fd5b6200021f8682870162000170565b925050604062000232868287016200019d565b9150509250925092565b6000604051905081810181811067ffffffffffffffff8211171562000266576200026562000348565b5b8060405250919050565b600067ffffffffffffffff8211156200028e576200028d62000348565b5b601f19601f8301169050602081019050919050565b6000819050919050565b60005b83811015620002cd578082015181840152602081019050620002b0565b83811115620002dd576000848401525b50505050565b60006002820490506001821680620002fc57607f821691505b6020821081141562000313576200031262000319565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200038281620002a3565b81146200038e57600080fd5b50565b61134180620003a16000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c3919061100a565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610fef565b60405180910390f35b610104610326565b604051610111919061110c565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610fef565b60405180910390f35b610152610428565b60405161015f9190611127565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610fef565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf919061110c565b60405180910390f35b6101d0610525565b6040516101dd919061100a565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610fef565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610fef565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d919061110c565b60405180910390f35b6060600380546102859061123c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061123c565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061108c565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce919061115e565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105349061123c565b80601f01602080910402602001604051908101604052809291908181526020018280546105609061123c565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a906110ec565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b6906110cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108269061104c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d919061110c565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610981906110ac565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f19061102c565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a829061106c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e919061115e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b82919061110c565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb4816112dd565b92915050565b600081359050610bc9816112f4565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc8816111c6565b82525050565b6000610cd982611142565b610ce3818561114d565b9350610cf3818560208601611209565b610cfc816112cc565b840191505092915050565b6000610d1460238361114d565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d7a60228361114d565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610de060268361114d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e4660288361114d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610eac60258361114d565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f1260248361114d565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f7860258361114d565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610fda816111f2565b82525050565b610fe9816111fc565b82525050565b60006020820190506110046000830184610cbf565b92915050565b600060208201905081810360008301526110248184610cce565b905092915050565b6000602082019050818103600083015261104581610d07565b9050919050565b6000602082019050818103600083015261106581610d6d565b9050919050565b6000602082019050818103600083015261108581610dd3565b9050919050565b600060208201905081810360008301526110a581610e39565b9050919050565b600060208201905081810360008301526110c581610e9f565b9050919050565b600060208201905081810360008301526110e581610f05565b9050919050565b6000602082019050818103600083015261110581610f6b565b9050919050565b60006020820190506111216000830184610fd1565b92915050565b600060208201905061113c6000830184610fe0565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611169826111f2565b9150611174836111f2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111a9576111a861126e565b5b828201905092915050565b60006111bf826111d2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561122757808201518184015260208101905061120c565b83811115611236576000848401525b50505050565b6000600282049050600182168061125457607f821691505b602082108114156112685761126761129d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6112e6816111b4565b81146112f157600080fd5b50565b6112fd816111f2565b811461130857600080fd5b5056fea2646970667358221220e7358b1fb3dbdbe02b4fba01ae04e72a559377068eaef5cafde738fa5f269bbe64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x16E2 CODESIZE SUB DUP1 PUSH3 0x16E2 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1B4 JUMP JUMPDEST DUP3 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x7B JUMP JUMPDEST POP DUP2 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x7B JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP POP PUSH3 0x391 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x89 SWAP1 PUSH3 0x2E3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xAD JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xF9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xC8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xF9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xF9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xF8 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xDB JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x108 SWAP2 SWAP1 PUSH3 0x10C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x127 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x10D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x142 PUSH3 0x13C DUP5 PUSH3 0x270 JUMP JUMPDEST PUSH3 0x23C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x15B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x168 DUP5 DUP3 DUP6 PUSH3 0x2AD JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x194 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x12B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1AE DUP2 PUSH3 0x377 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1F3 DUP7 DUP3 DUP8 ADD PUSH3 0x170 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x21F DUP7 DUP3 DUP8 ADD PUSH3 0x170 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x232 DUP7 DUP3 DUP8 ADD PUSH3 0x19D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x266 JUMPI PUSH3 0x265 PUSH3 0x348 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x28E JUMPI PUSH3 0x28D PUSH3 0x348 JUMP JUMPDEST JUMPDEST PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x2CD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x2B0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x2DD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2FC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x313 JUMPI PUSH3 0x312 PUSH3 0x319 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x382 DUP2 PUSH3 0x2A3 JUMP JUMPDEST DUP2 EQ PUSH3 0x38E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1341 DUP1 PUSH3 0x3A1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP5 DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x388 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FF SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41C DUP6 PUSH2 0x414 PUSH2 0x747 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH2 0x43E PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x44C PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x534 SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x560 SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x582 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x590 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x5C6 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67A SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x697 PUSH2 0x68E PUSH2 0x747 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 PUSH2 0x6AF PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x826 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP1 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F1 SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA05 DUP4 DUP4 DUP4 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB95 DUP5 DUP5 DUP5 PUSH2 0xBA0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB4 DUP2 PUSH2 0x12DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC9 DUP2 PUSH2 0x12F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBEF DUP5 DUP3 DUP6 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC19 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC2A DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC57 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC68 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC79 DUP7 DUP3 DUP8 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA4 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCB5 DUP6 DUP3 DUP7 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD9 DUP3 PUSH2 0x1142 JUMP JUMPDEST PUSH2 0xCE3 DUP2 DUP6 PUSH2 0x114D JUMP JUMPDEST SWAP4 POP PUSH2 0xCF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1209 JUMP JUMPDEST PUSH2 0xCFC DUP2 PUSH2 0x12CC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD14 PUSH1 0x23 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7A PUSH1 0x22 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE0 PUSH1 0x26 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE46 PUSH1 0x28 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAC PUSH1 0x25 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF12 PUSH1 0x24 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF78 PUSH1 0x25 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFDA DUP2 PUSH2 0x11F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFE9 DUP2 PUSH2 0x11FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1004 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1024 DUP2 DUP5 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1045 DUP2 PUSH2 0xD07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1065 DUP2 PUSH2 0xD6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1085 DUP2 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A5 DUP2 PUSH2 0xE39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10C5 DUP2 PUSH2 0xE9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10E5 DUP2 PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1105 DUP2 PUSH2 0xF6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1121 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x113C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 DUP3 PUSH2 0x11F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 DUP4 PUSH2 0x11F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11A9 JUMPI PUSH2 0x11A8 PUSH2 0x126E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BF DUP3 PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1227 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x120C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1254 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0x129D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E6 DUP2 PUSH2 0x11B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x12FD DUP2 PUSH2 0x11F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 CALLDATALOAD DUP12 0x1F 0xB3 0xDB 0xDB 0xE0 0x2B 0x4F 0xBA ADD 0xAE DIV 0xE7 0x2A SSTORE SWAP4 PUSH24 0x68EAEF5CAFDE738FA5F269BBE64736F6C63430008000033 ",
							"sourceMap": "259:6845:0:-:0;;;733:176;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;830:5;822;:13;;;;;;;;;;;;:::i;:::-;;856:7;846;:17;;;;;;;;;;;;:::i;:::-;;889:12;;874;:27;;;;733:176;;;259:6845;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:5:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;380:288::-;;496:3;489:4;481:6;477:17;473:27;463:2;;514:1;511;504:12;463:2;547:6;541:13;572:90;658:3;650:6;643:4;635:6;631:17;572:90;:::i;:::-;563:99;;453:215;;;;;:::o;674:143::-;;762:6;756:13;747:22;;778:33;805:5;778:33;:::i;:::-;737:80;;;;:::o;823:808::-;;;;996:2;984:9;975:7;971:23;967:32;964:2;;;1012:1;1009;1002:12;964:2;1076:1;1065:9;1061:17;1055:24;1106:18;1098:6;1095:30;1092:2;;;1138:1;1135;1128:12;1092:2;1166:74;1232:7;1223:6;1212:9;1208:22;1166:74;:::i;:::-;1156:84;;1026:224;1310:2;1299:9;1295:18;1289:25;1341:18;1333:6;1330:30;1327:2;;;1373:1;1370;1363:12;1327:2;1401:74;1467:7;1458:6;1447:9;1443:22;1401:74;:::i;:::-;1391:84;;1260:225;1524:2;1550:64;1606:7;1597:6;1586:9;1582:22;1550:64;:::i;:::-;1540:74;;1495:129;954:677;;;;;:::o;1637:283::-;;1703:2;1697:9;1687:19;;1745:4;1737:6;1733:17;1852:6;1840:10;1837:22;1816:18;1804:10;1801:34;1798:62;1795:2;;;1863:18;;:::i;:::-;1795:2;1903:10;1899:2;1892:22;1677:243;;;;:::o;1926:332::-;;2078:18;2070:6;2067:30;2064:2;;;2100:18;;:::i;:::-;2064:2;2185:4;2181:9;2174:4;2166:6;2162:17;2158:33;2150:41;;2246:4;2240;2236:15;2228:23;;1993:265;;;:::o;2264:77::-;;2330:5;2319:16;;2309:32;;;:::o;2347:307::-;2415:1;2425:113;2439:6;2436:1;2433:13;2425:113;;;2524:1;2519:3;2515:11;2509:18;2505:1;2500:3;2496:11;2489:39;2461:2;2458:1;2454:10;2449:15;;2425:113;;;2556:6;2553:1;2550:13;2547:2;;;2636:1;2627:6;2622:3;2618:16;2611:27;2547:2;2396:258;;;;:::o;2660:320::-;;2741:1;2735:4;2731:12;2721:22;;2788:1;2782:4;2778:12;2809:18;2799:2;;2865:4;2857:6;2853:17;2843:27;;2799:2;2927;2919:6;2916:14;2896:18;2893:38;2890:2;;;2946:18;;:::i;:::-;2890:2;2711:269;;;;:::o;2986:180::-;3034:77;3031:1;3024:88;3131:4;3128:1;3121:15;3155:4;3152:1;3145:15;3172:180;3220:77;3217:1;3210:88;3317:4;3314:1;3307:15;3341:4;3338:1;3331:15;3358:122;3431:24;3449:5;3431:24;:::i;:::-;3424:5;3421:35;3411:2;;3470:1;3467;3460:12;3411:2;3401:79;:::o;259:6845:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11725:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:5",
														"type": ""
													}
												],
												"src": "7:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:5",
														"type": ""
													}
												],
												"src": "152:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:196:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:5"
															},
															"nodeType": "YulIf",
															"src": "373:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "450:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "454:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:5",
														"type": ""
													}
												],
												"src": "297:262:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:324:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "694:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "696:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "696:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "696:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "669:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "678:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "665:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "665:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:32:5"
															},
															"nodeType": "YulIf",
															"src": "658:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "720:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "735:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "749:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "739:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "764:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "799:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "774:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "764:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "847:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "862:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "876:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "866:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "892:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "927:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "923:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "923:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "947:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "902:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "902:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "892:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "610:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "621:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "633:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "641:6:5",
														"type": ""
													}
												],
												"src": "565:407:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1078:452:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1124:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1133:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1126:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1126:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1126:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1099:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1108:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1120:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:32:5"
															},
															"nodeType": "YulIf",
															"src": "1088:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1150:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1165:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1179:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1169:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1194:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1229:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1240:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1225:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1225:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1249:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1204:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1204:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1194:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1277:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1322:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1357:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1368:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1353:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1353:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1377:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1332:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1322:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1405:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1420:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1424:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1450:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1485:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1496:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1481:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1481:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1505:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1460:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1460:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1450:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1032:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1043:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1055:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1063:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1071:6:5",
														"type": ""
													}
												],
												"src": "978:552:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1619:324:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1665:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1674:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1677:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1667:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1667:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1661:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1632:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:32:5"
															},
															"nodeType": "YulIf",
															"src": "1629:2:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1691:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1735:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1770:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1781:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1766:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1766:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1790:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1745:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1735:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1818:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1833:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1837:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1863:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1898:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1909:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1894:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1894:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1918:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1873:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1873:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1863:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1581:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1592:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1604:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1612:6:5",
														"type": ""
													}
												],
												"src": "1536:407:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2008:50:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2025:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2045:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2030:14:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:21:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:34:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2018:34:5"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1996:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2003:3:5",
														"type": ""
													}
												],
												"src": "1949:109:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:272:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2166:53:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2180:32:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:39:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2170:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2228:78:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2294:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2299:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2235:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:71:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2228:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:5"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2315:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:52:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2315:52:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2376:46:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:39:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2137:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2144:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2152:3:5",
														"type": ""
													}
												],
												"src": "2064:364:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2580:221:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2590:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2656:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2661:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2597:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2590:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2685:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2690:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2681:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2681:11:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2694:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2674:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2750:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2755:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2746:12:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2760:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2739:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2739:27:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2776:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2787:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2792:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2783:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2568:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2576:3:5",
														"type": ""
													}
												],
												"src": "2434:367:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3034:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2970:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2963:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3058:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3063:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:11:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3067:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3047:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3123:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3119:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:12:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3133:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3112:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3112:26:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3112:26:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3148:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3164:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3155:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3148:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2941:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2949:3:5",
														"type": ""
													}
												],
												"src": "2807:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3325:224:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3335:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3401:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3406:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3342:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3335:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3430:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3426:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3426:11:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3439:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3419:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3495:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3500:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3491:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3491:12:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3505:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3484:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3484:30:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3524:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3535:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3531:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3531:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3524:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3313:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3321:3:5",
														"type": ""
													}
												],
												"src": "3179:370:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3701:226:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3711:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3777:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3782:2:5",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3718:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3806:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3811:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3802:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3802:11:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3815:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3795:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3795:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3871:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3876:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3867:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3867:12:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3881:10:5",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:32:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:32:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3902:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3913:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3918:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3909:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3909:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3902:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3689:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3697:3:5",
														"type": ""
													}
												],
												"src": "3555:372:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4079:223:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4089:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4155:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4160:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4096:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4089:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4184:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4189:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4180:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4180:11:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4193:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4173:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4173:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4173:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4249:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4254:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4245:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4245:12:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4259:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:29:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4277:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4288:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4293:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4284:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4284:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4277:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4067:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4075:3:5",
														"type": ""
													}
												],
												"src": "3933:369:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4454:222:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4464:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4530:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4471:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4471:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4464:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4559:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4564:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4555:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4555:11:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4568:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4548:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4624:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4629:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4620:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4620:12:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4634:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4613:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:28:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4613:28:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4651:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4662:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4667:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4658:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4658:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4651:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4442:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4450:3:5",
														"type": ""
													}
												],
												"src": "4308:368:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4828:223:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4838:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4904:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4909:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4845:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4838:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4933:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4929:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4929:11:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4942:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:55:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4922:55:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4998:3:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5003:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4994:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4994:12:5"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5008:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4987:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:29:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4987:29:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5026:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5037:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5042:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5033:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5033:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5026:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4816:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4824:3:5",
														"type": ""
													}
												],
												"src": "4682:369:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5122:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5139:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5162:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5144:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5132:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5132:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5132:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5110:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5117:3:5",
														"type": ""
													}
												],
												"src": "5057:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:51:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5259:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5280:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5264:15:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5264:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5252:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5252:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5252:35:5"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5230:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5237:3:5",
														"type": ""
													}
												],
												"src": "5181:112:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5391:118:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5401:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5413:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5424:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5409:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5401:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5475:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5488:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5499:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5484:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5484:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5437:37:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5437:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5437:65:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5363:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5375:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5386:4:5",
														"type": ""
													}
												],
												"src": "5299:210:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5633:195:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5643:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5655:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5651:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5651:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5643:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5690:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5701:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5686:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5686:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5709:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5715:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5705:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5705:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5679:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5735:86:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5807:6:5"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5816:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5743:63:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:78:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5735:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5605:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5617:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5628:4:5",
														"type": ""
													}
												],
												"src": "5515:313:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6005:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6015:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6027:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6038:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6023:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6015:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6062:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6073:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6058:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6058:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6081:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6087:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6051:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6051:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6051:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6107:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6241:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6115:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6115:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6107:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5985:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6000:4:5",
														"type": ""
													}
												],
												"src": "5834:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6430:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6440:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6452:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6463:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6448:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6448:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6440:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6487:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6498:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6483:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6483:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6506:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6512:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6502:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6502:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6476:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6476:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6476:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6532:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6666:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6540:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6540:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6532:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6410:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6425:4:5",
														"type": ""
													}
												],
												"src": "6259:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6855:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6865:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6877:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6888:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6873:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6865:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6912:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6923:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6908:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6908:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6931:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6937:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6927:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6927:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6901:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6901:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6957:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7091:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6965:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6965:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6957:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6835:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6850:4:5",
														"type": ""
													}
												],
												"src": "6684:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7280:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7290:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7302:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7313:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7298:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7290:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7337:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7348:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7333:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7333:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7356:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7362:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7352:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7352:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7326:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7326:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7326:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7382:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7516:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7390:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7382:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7260:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7275:4:5",
														"type": ""
													}
												],
												"src": "7109:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7705:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7715:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7727:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7738:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7723:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7723:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7715:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7762:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7773:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7758:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7758:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7781:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7787:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7777:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7777:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7751:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7751:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7751:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7807:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7941:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7815:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7815:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7807:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7685:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7700:4:5",
														"type": ""
													}
												],
												"src": "7534:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8130:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8140:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8152:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8163:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8148:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8140:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8187:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8198:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8183:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8183:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8206:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8212:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8202:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8202:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8176:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8176:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8176:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8232:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8366:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8240:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8232:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8110:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8125:4:5",
														"type": ""
													}
												],
												"src": "7959:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8555:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8565:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8577:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8588:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8573:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8565:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8612:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8623:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8608:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8608:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8631:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8637:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8627:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8627:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8601:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8601:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8601:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8657:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8791:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8665:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8665:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8657:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8535:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8550:4:5",
														"type": ""
													}
												],
												"src": "8384:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8907:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8917:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8929:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8940:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8925:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8925:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8917:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8997:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9010:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9021:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9006:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9006:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8953:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8953:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8953:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8879:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8891:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8902:4:5",
														"type": ""
													}
												],
												"src": "8809:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9131:120:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9141:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9153:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9164:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9149:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9149:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9141:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9217:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9230:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9241:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9226:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9226:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9177:39:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9177:67:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9177:67:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9103:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9126:4:5",
														"type": ""
													}
												],
												"src": "9037:214:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9316:40:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9327:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9343:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9337:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9327:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9299:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9309:6:5",
														"type": ""
													}
												],
												"src": "9257:99:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9458:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9475:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9480:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9468:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9468:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9468:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9496:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9515:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9520:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9511:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9511:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9496:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9430:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9435:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9446:11:5",
														"type": ""
													}
												],
												"src": "9362:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9581:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9591:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9614:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9596:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9591:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9625:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9648:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9630:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9630:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9625:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9788:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9790:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9790:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9790:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9709:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9716:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9784:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9712:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9712:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9706:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9706:81:5"
															},
															"nodeType": "YulIf",
															"src": "9703:2:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9820:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9831:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9834:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9827:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9827:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9820:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9568:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9571:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9577:3:5",
														"type": ""
													}
												],
												"src": "9537:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9893:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9903:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9932:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9914:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9914:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9903:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9875:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9885:7:5",
														"type": ""
													}
												],
												"src": "9848:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9992:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10002:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10027:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10020:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10020:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10013:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10013:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10002:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9974:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9984:7:5",
														"type": ""
													}
												],
												"src": "9950:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10091:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10101:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10116:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10123:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10112:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10112:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10101:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10073:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10083:7:5",
														"type": ""
													}
												],
												"src": "10046:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10223:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10233:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10244:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10233:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10205:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10215:7:5",
														"type": ""
													}
												],
												"src": "10178:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10304:43:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10314:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10329:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10336:4:5",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10325:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10325:16:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10314:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10286:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10296:7:5",
														"type": ""
													}
												],
												"src": "10261:86:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10402:258:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10412:10:5",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10421:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10416:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10481:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10506:3:5"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10511:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10502:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10502:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10525:3:5"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10530:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10521:3:5"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10521:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10515:5:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10515:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10495:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10495:39:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10495:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10442:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10445:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10439:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10439:13:5"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10453:19:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10455:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10464:1:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10467:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10460:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10460:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10455:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10435:3:5",
																"statements": []
															},
															"src": "10431:113:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10578:76:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10628:3:5"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10633:6:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10624:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10624:16:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10642:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10617:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10617:27:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10617:27:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10559:1:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10562:6:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10556:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10556:13:5"
															},
															"nodeType": "YulIf",
															"src": "10553:2:5"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10384:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10389:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10394:6:5",
														"type": ""
													}
												],
												"src": "10353:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10717:269:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10727:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10741:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10747:1:5",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10737:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10737:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10727:6:5"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10758:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10788:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10794:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10784:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10784:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10762:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10835:51:5",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10849:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10863:6:5"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10871:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10859:3:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10859:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10849:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10815:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10808:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10808:26:5"
															},
															"nodeType": "YulIf",
															"src": "10805:2:5"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10938:42:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10952:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10952:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10952:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10902:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10925:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10933:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10922:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10922:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10899:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10899:38:5"
															},
															"nodeType": "YulIf",
															"src": "10896:2:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10701:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10710:6:5",
														"type": ""
													}
												],
												"src": "10666:320:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11020:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11037:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11040:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11030:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11030:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11030:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11134:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11137:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11127:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11127:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11127:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11158:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11161:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11151:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11151:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11151:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10992:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11206:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11223:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11226:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11216:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11216:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11216:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11320:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11323:4:5",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11313:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11313:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11313:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11344:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11347:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11337:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11337:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11337:15:5"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11178:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11412:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11422:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11440:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11447:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11436:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11436:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11456:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11452:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11452:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11432:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11432:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11422:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11395:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11405:6:5",
														"type": ""
													}
												],
												"src": "11364:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11515:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11572:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11581:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11584:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11574:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11574:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11574:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11538:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11563:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "11545:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11545:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11535:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11535:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11528:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11528:43:5"
															},
															"nodeType": "YulIf",
															"src": "11525:2:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11508:5:5",
														"type": ""
													}
												],
												"src": "11472:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11643:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11700:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11709:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11712:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11702:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11702:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11702:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11666:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11691:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "11673:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11673:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11663:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11663:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11656:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11656:43:5"
															},
															"nodeType": "YulIf",
															"src": "11653:2:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11636:5:5",
														"type": ""
													}
												],
												"src": "11600:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n\n        mstore(add(pos, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(pos, 32), \"ess\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(pos, 32), \"ss\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(pos, 32), \"alance\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n\n        mstore(add(pos, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(pos, 32), \"llowance\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(pos, 32), \"dress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(pos, 32), \"ress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(pos, 32), \" zero\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c3919061100a565b60405180910390f35b6100e660048036038101906100e19190610c83565b610308565b6040516100f39190610fef565b60405180910390f35b610104610326565b604051610111919061110c565b60405180910390f35b610134600480360381019061012f9190610c34565b610330565b6040516101419190610fef565b60405180910390f35b610152610428565b60405161015f9190611127565b60405180910390f35b610182600480360381019061017d9190610c83565b610431565b60405161018f9190610fef565b60405180910390f35b6101b260048036038101906101ad9190610bcf565b6104dd565b6040516101bf919061110c565b60405180910390f35b6101d0610525565b6040516101dd919061100a565b60405180910390f35b61020060048036038101906101fb9190610c83565b6105b7565b60405161020d9190610fef565b60405180910390f35b610230600480360381019061022b9190610c83565b6106a2565b60405161023d9190610fef565b60405180910390f35b610260600480360381019061025b9190610bf8565b6106c0565b60405161026d919061110c565b60405180910390f35b6060600380546102859061123c565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061123c565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c610315610747565b848461074f565b6001905092915050565b6000600254905090565b600061033d84848461091a565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000610388610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061108c565b60405180910390fd5b61041c85610414610747565b85840361074f565b60019150509392505050565b60006012905090565b60006104d361043e610747565b84846001600061044c610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104ce919061115e565b61074f565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105349061123c565b80601f01602080910402602001604051908101604052809291908181526020018280546105609061123c565b80156105ad5780601f10610582576101008083540402835291602001916105ad565b820191906000526020600020905b81548152906001019060200180831161059057829003601f168201915b5050505050905090565b600080600160006105c6610747565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610683576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067a906110ec565b60405180910390fd5b61069761068e610747565b8585840361074f565b600191505092915050565b60006106b66106af610747565b848461091a565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b6906110cc565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561082f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108269061104c565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161090d919061110c565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561098a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610981906110ac565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f19061102c565b60405180910390fd5b610a05838383610b9b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a829061106c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b1e919061115e565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b82919061110c565b60405180910390a3610b95848484610ba0565b50505050565b505050565b505050565b600081359050610bb4816112dd565b92915050565b600081359050610bc9816112f4565b92915050565b600060208284031215610be157600080fd5b6000610bef84828501610ba5565b91505092915050565b60008060408385031215610c0b57600080fd5b6000610c1985828601610ba5565b9250506020610c2a85828601610ba5565b9150509250929050565b600080600060608486031215610c4957600080fd5b6000610c5786828701610ba5565b9350506020610c6886828701610ba5565b9250506040610c7986828701610bba565b9150509250925092565b60008060408385031215610c9657600080fd5b6000610ca485828601610ba5565b9250506020610cb585828601610bba565b9150509250929050565b610cc8816111c6565b82525050565b6000610cd982611142565b610ce3818561114d565b9350610cf3818560208601611209565b610cfc816112cc565b840191505092915050565b6000610d1460238361114d565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d7a60228361114d565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610de060268361114d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e4660288361114d565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610eac60258361114d565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f1260248361114d565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f7860258361114d565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610fda816111f2565b82525050565b610fe9816111fc565b82525050565b60006020820190506110046000830184610cbf565b92915050565b600060208201905081810360008301526110248184610cce565b905092915050565b6000602082019050818103600083015261104581610d07565b9050919050565b6000602082019050818103600083015261106581610d6d565b9050919050565b6000602082019050818103600083015261108581610dd3565b9050919050565b600060208201905081810360008301526110a581610e39565b9050919050565b600060208201905081810360008301526110c581610e9f565b9050919050565b600060208201905081810360008301526110e581610f05565b9050919050565b6000602082019050818103600083015261110581610f6b565b9050919050565b60006020820190506111216000830184610fd1565b92915050565b600060208201905061113c6000830184610fe0565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611169826111f2565b9150611174836111f2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111a9576111a861126e565b5b828201905092915050565b60006111bf826111d2565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561122757808201518184015260208101905061120c565b83811115611236576000848401525b50505050565b6000600282049050600182168061125457607f821691505b602082108114156112685761126761129d565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6112e6816111b4565b81146112f157600080fd5b50565b6112fd816111f2565b811461130857600080fd5b5056fea2646970667358221220e7358b1fb3dbdbe02b4fba01ae04e72a559377068eaef5cafde738fa5f269bbe64736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x428 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x100A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x5B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xC83 JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xFEF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xBF8 JUMP JUMPDEST PUSH2 0x6C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP5 DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x388 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FF SWAP1 PUSH2 0x108C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x41C DUP6 PUSH2 0x414 PUSH2 0x747 JUMP JUMPDEST DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D3 PUSH2 0x43E PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH1 0x1 PUSH1 0x0 PUSH2 0x44C PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x534 SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x560 SWAP1 PUSH2 0x123C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5AD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x582 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5AD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x590 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x5C6 PUSH2 0x747 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67A SWAP1 PUSH2 0x10EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x697 PUSH2 0x68E PUSH2 0x747 JUMP JUMPDEST DUP6 DUP6 DUP5 SUB PUSH2 0x74F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B6 PUSH2 0x6AF PUSH2 0x747 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x91A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7BF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B6 SWAP1 PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x826 SWAP1 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x90D SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x98A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x981 SWAP1 PUSH2 0x10AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F1 SWAP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA05 DUP4 DUP4 DUP4 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA82 SWAP1 PUSH2 0x106C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB1E SWAP2 SWAP1 PUSH2 0x115E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xB82 SWAP2 SWAP1 PUSH2 0x110C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xB95 DUP5 DUP5 DUP5 PUSH2 0xBA0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB4 DUP2 PUSH2 0x12DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC9 DUP2 PUSH2 0x12F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBEF DUP5 DUP3 DUP6 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC0B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC19 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC2A DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC57 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC68 DUP7 DUP3 DUP8 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC79 DUP7 DUP3 DUP8 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCA4 DUP6 DUP3 DUP7 ADD PUSH2 0xBA5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCB5 DUP6 DUP3 DUP7 ADD PUSH2 0xBBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCC8 DUP2 PUSH2 0x11C6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD9 DUP3 PUSH2 0x1142 JUMP JUMPDEST PUSH2 0xCE3 DUP2 DUP6 PUSH2 0x114D JUMP JUMPDEST SWAP4 POP PUSH2 0xCF3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1209 JUMP JUMPDEST PUSH2 0xCFC DUP2 PUSH2 0x12CC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD14 PUSH1 0x23 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7A PUSH1 0x22 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE0 PUSH1 0x26 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE46 PUSH1 0x28 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAC PUSH1 0x25 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF12 PUSH1 0x24 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF78 PUSH1 0x25 DUP4 PUSH2 0x114D JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFDA DUP2 PUSH2 0x11F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFE9 DUP2 PUSH2 0x11FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1004 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1024 DUP2 DUP5 PUSH2 0xCCE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1045 DUP2 PUSH2 0xD07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1065 DUP2 PUSH2 0xD6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1085 DUP2 PUSH2 0xDD3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10A5 DUP2 PUSH2 0xE39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10C5 DUP2 PUSH2 0xE9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10E5 DUP2 PUSH2 0xF05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1105 DUP2 PUSH2 0xF6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1121 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFD1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x113C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1169 DUP3 PUSH2 0x11F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1174 DUP4 PUSH2 0x11F2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11A9 JUMPI PUSH2 0x11A8 PUSH2 0x126E JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BF DUP3 PUSH2 0x11D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1227 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x120C JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1236 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1254 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0x129D JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E6 DUP2 PUSH2 0x11B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x12FD DUP2 PUSH2 0x11F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 CALLDATALOAD DUP12 0x1F 0xB3 0xDB 0xDB 0xE0 0x2B 0x4F 0xBA ADD 0xAE DIV 0xE7 0x2A SSTORE SWAP4 PUSH24 0x68EAEF5CAFDE738FA5F269BBE64736F6C63430008000033 ",
							"sourceMap": "259:6845:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2462:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1382:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2781:529;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1245:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3375:297;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1543:177;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1085:104;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3737:482;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1878:216;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:201;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;947:100;1001:13;1034:5;1027:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;947:100;:::o;2462:210::-;2581:4;2603:39;2612:12;:10;:12::i;:::-;2626:7;2635:6;2603:8;:39::i;:::-;2660:4;2653:11;;2462:210;;;;:::o;1382:108::-;1443:7;1470:12;;1463:19;;1382:108;:::o;2781:529::-;2921:4;2938:36;2948:6;2956:9;2967:6;2938:9;:36::i;:::-;2987:24;3014:11;:19;3026:6;3014:19;;;;;;;;;;;;;;;:33;3034:12;:10;:12::i;:::-;3014:33;;;;;;;;;;;;;;;;2987:60;;3100:6;3080:16;:26;;3058:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;3210:57;3219:6;3227:12;:10;:12::i;:::-;3260:6;3241:16;:25;3210:8;:57::i;:::-;3298:4;3291:11;;;2781:529;;;;;:::o;1245:93::-;1303:5;1328:2;1321:9;;1245:93;:::o;3375:297::-;3490:4;3512:130;3535:12;:10;:12::i;:::-;3562:7;3621:10;3584:11;:25;3596:12;:10;:12::i;:::-;3584:25;;;;;;;;;;;;;;;:34;3610:7;3584:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;3512:8;:130::i;:::-;3660:4;3653:11;;3375:297;;;;:::o;1543:177::-;1662:7;1694:9;:18;1704:7;1694:18;;;;;;;;;;;;;;;;1687:25;;1543:177;;;:::o;1085:104::-;1141:13;1174:7;1167:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085:104;:::o;3737:482::-;3857:4;3879:24;3906:11;:25;3918:12;:10;:12::i;:::-;3906:25;;;;;;;;;;;;;;;:34;3932:7;3906:34;;;;;;;;;;;;;;;;3879:61;;3993:15;3973:16;:35;;3951:122;;;;;;;;;;;;:::i;:::-;;;;;;;;;4109:67;4118:12;:10;:12::i;:::-;4132:7;4160:15;4141:16;:34;4109:8;:67::i;:::-;4207:4;4200:11;;;3737:482;;;;:::o;1878:216::-;2000:4;2022:42;2032:12;:10;:12::i;:::-;2046:9;2057:6;2022:9;:42::i;:::-;2082:4;2075:11;;1878:216;;;;:::o;2187:201::-;2321:7;2353:11;:18;2365:5;2353:18;;;;;;;;;;;;;;;:27;2372:7;2353:27;;;;;;;;;;;;;;;;2346:34;;2187:201;;;;:::o;480:98:1:-;533:7;560:10;553:17;;480:98;:::o;6304:380:0:-;6457:1;6440:19;;:5;:19;;;;6432:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6538:1;6519:21;;:7;:21;;;;6511:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6622:6;6592:11;:18;6604:5;6592:18;;;;;;;;;;;;;;;:27;6611:7;6592:27;;;;;;;;;;;;;;;:36;;;;6660:7;6644:32;;6653:5;6644:32;;;6669:6;6644:32;;;;;;:::i;:::-;;;;;;;;6304:380;;;:::o;4290:770::-;4448:1;4430:20;;:6;:20;;;;4422:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;4532:1;4511:23;;:9;:23;;;;4503:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;4587:47;4608:6;4616:9;4627:6;4587:20;:47::i;:::-;4647:21;4671:9;:17;4681:6;4671:17;;;;;;;;;;;;;;;;4647:41;;4738:6;4721:13;:23;;4699:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;4882:6;4866:13;:22;4846:9;:17;4856:6;4846:17;;;;;;;;;;;;;;;:42;;;;4934:6;4910:9;:20;4920:9;4910:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;4975:9;4958:35;;4967:6;4958:35;;;4986:6;4958:35;;;;;;:::i;:::-;;;;;;;;5006:46;5026:6;5034:9;5045:6;5006:19;:46::i;:::-;4290:770;;;;:::o;6768:125::-;;;;:::o;6977:124::-;;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:367::-;;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2694:34;2690:1;2685:3;2681:11;2674:55;2760:5;2755:2;2750:3;2746:12;2739:27;2792:2;2787:3;2783:12;2776:19;;2580:221;;;:::o;2807:366::-;;2970:67;3034:2;3029:3;2970:67;:::i;:::-;2963:74;;3067:34;3063:1;3058:3;3054:11;3047:55;3133:4;3128:2;3123:3;3119:12;3112:26;3164:2;3159:3;3155:12;3148:19;;2953:220;;;:::o;3179:370::-;;3342:67;3406:2;3401:3;3342:67;:::i;:::-;3335:74;;3439:34;3435:1;3430:3;3426:11;3419:55;3505:8;3500:2;3495:3;3491:12;3484:30;3540:2;3535:3;3531:12;3524:19;;3325:224;;;:::o;3555:372::-;;3718:67;3782:2;3777:3;3718:67;:::i;:::-;3711:74;;3815:34;3811:1;3806:3;3802:11;3795:55;3881:10;3876:2;3871:3;3867:12;3860:32;3918:2;3913:3;3909:12;3902:19;;3701:226;;;:::o;3933:369::-;;4096:67;4160:2;4155:3;4096:67;:::i;:::-;4089:74;;4193:34;4189:1;4184:3;4180:11;4173:55;4259:7;4254:2;4249:3;4245:12;4238:29;4293:2;4288:3;4284:12;4277:19;;4079:223;;;:::o;4308:368::-;;4471:67;4535:2;4530:3;4471:67;:::i;:::-;4464:74;;4568:34;4564:1;4559:3;4555:11;4548:55;4634:6;4629:2;4624:3;4620:12;4613:28;4667:2;4662:3;4658:12;4651:19;;4454:222;;;:::o;4682:369::-;;4845:67;4909:2;4904:3;4845:67;:::i;:::-;4838:74;;4942:34;4938:1;4933:3;4929:11;4922:55;5008:7;5003:2;4998:3;4994:12;4987:29;5042:2;5037:3;5033:12;5026:19;;4828:223;;;:::o;5057:118::-;5144:24;5162:5;5144:24;:::i;:::-;5139:3;5132:37;5122:53;;:::o;5181:112::-;5264:22;5280:5;5264:22;:::i;:::-;5259:3;5252:35;5242:51;;:::o;5299:210::-;;5424:2;5413:9;5409:18;5401:26;;5437:65;5499:1;5488:9;5484:17;5475:6;5437:65;:::i;:::-;5391:118;;;;:::o;5515:313::-;;5666:2;5655:9;5651:18;5643:26;;5715:9;5709:4;5705:20;5701:1;5690:9;5686:17;5679:47;5743:78;5816:4;5807:6;5743:78;:::i;:::-;5735:86;;5633:195;;;;:::o;5834:419::-;;6038:2;6027:9;6023:18;6015:26;;6087:9;6081:4;6077:20;6073:1;6062:9;6058:17;6051:47;6115:131;6241:4;6115:131;:::i;:::-;6107:139;;6005:248;;;:::o;6259:419::-;;6463:2;6452:9;6448:18;6440:26;;6512:9;6506:4;6502:20;6498:1;6487:9;6483:17;6476:47;6540:131;6666:4;6540:131;:::i;:::-;6532:139;;6430:248;;;:::o;6684:419::-;;6888:2;6877:9;6873:18;6865:26;;6937:9;6931:4;6927:20;6923:1;6912:9;6908:17;6901:47;6965:131;7091:4;6965:131;:::i;:::-;6957:139;;6855:248;;;:::o;7109:419::-;;7313:2;7302:9;7298:18;7290:26;;7362:9;7356:4;7352:20;7348:1;7337:9;7333:17;7326:47;7390:131;7516:4;7390:131;:::i;:::-;7382:139;;7280:248;;;:::o;7534:419::-;;7738:2;7727:9;7723:18;7715:26;;7787:9;7781:4;7777:20;7773:1;7762:9;7758:17;7751:47;7815:131;7941:4;7815:131;:::i;:::-;7807:139;;7705:248;;;:::o;7959:419::-;;8163:2;8152:9;8148:18;8140:26;;8212:9;8206:4;8202:20;8198:1;8187:9;8183:17;8176:47;8240:131;8366:4;8240:131;:::i;:::-;8232:139;;8130:248;;;:::o;8384:419::-;;8588:2;8577:9;8573:18;8565:26;;8637:9;8631:4;8627:20;8623:1;8612:9;8608:17;8601:47;8665:131;8791:4;8665:131;:::i;:::-;8657:139;;8555:248;;;:::o;8809:222::-;;8940:2;8929:9;8925:18;8917:26;;8953:71;9021:1;9010:9;9006:17;8997:6;8953:71;:::i;:::-;8907:124;;;;:::o;9037:214::-;;9164:2;9153:9;9149:18;9141:26;;9177:67;9241:1;9230:9;9226:17;9217:6;9177:67;:::i;:::-;9131:120;;;;:::o;9257:99::-;;9343:5;9337:12;9327:22;;9316:40;;;:::o;9362:169::-;;9480:6;9475:3;9468:19;9520:4;9515:3;9511:14;9496:29;;9458:73;;;;:::o;9537:305::-;;9596:20;9614:1;9596:20;:::i;:::-;9591:25;;9630:20;9648:1;9630:20;:::i;:::-;9625:25;;9784:1;9716:66;9712:74;9709:1;9706:81;9703:2;;;9790:18;;:::i;:::-;9703:2;9834:1;9831;9827:9;9820:16;;9581:261;;;;:::o;9848:96::-;;9914:24;9932:5;9914:24;:::i;:::-;9903:35;;9893:51;;;:::o;9950:90::-;;10027:5;10020:13;10013:21;10002:32;;9992:48;;;:::o;10046:126::-;;10123:42;10116:5;10112:54;10101:65;;10091:81;;;:::o;10178:77::-;;10244:5;10233:16;;10223:32;;;:::o;10261:86::-;;10336:4;10329:5;10325:16;10314:27;;10304:43;;;:::o;10353:307::-;10421:1;10431:113;10445:6;10442:1;10439:13;10431:113;;;10530:1;10525:3;10521:11;10515:18;10511:1;10506:3;10502:11;10495:39;10467:2;10464:1;10460:10;10455:15;;10431:113;;;10562:6;10559:1;10556:13;10553:2;;;10642:1;10633:6;10628:3;10624:16;10617:27;10553:2;10402:258;;;;:::o;10666:320::-;;10747:1;10741:4;10737:12;10727:22;;10794:1;10788:4;10784:12;10815:18;10805:2;;10871:4;10863:6;10859:17;10849:27;;10805:2;10933;10925:6;10922:14;10902:18;10899:38;10896:2;;;10952:18;;:::i;:::-;10896:2;10717:269;;;;:::o;10992:180::-;11040:77;11037:1;11030:88;11137:4;11134:1;11127:15;11161:4;11158:1;11151:15;11178:180;11226:77;11223:1;11216:88;11323:4;11320:1;11313:15;11347:4;11344:1;11337:15;11364:102;;11456:2;11452:7;11447:2;11440:5;11436:14;11432:28;11422:38;;11412:54;;;:::o;11472:122::-;11545:24;11563:5;11545:24;:::i;:::-;11538:5;11535:35;11525:2;;11584:1;11581;11574:12;11525:2;11515:79;:::o;11600:122::-;11673:24;11691:5;11673:24;:::i;:::-;11666:5;11663:35;11653:2;;11712:1;11709;11702:12;11653:2;11643:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "985800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1563",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1182",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 733,
									"end": 909,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 733,
									"end": 909,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 733,
									"end": 909,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 909,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 909,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 733,
									"end": 909,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 733,
									"end": 909,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 733,
									"end": 909,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 733,
									"end": 909,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 830,
									"end": 835,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 822,
									"end": 827,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 822,
									"end": 835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 822,
									"end": 835,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 822,
									"end": 835,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 822,
									"end": 835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 822,
									"end": 835,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 822,
									"end": 835,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 822,
									"end": 835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 822,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 822,
									"end": 835,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 822,
									"end": 835,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 822,
									"end": 835,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 822,
									"end": 835,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 822,
									"end": 835,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 822,
									"end": 835,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 822,
									"end": 835,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 822,
									"end": 835,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 856,
									"end": 863,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 846,
									"end": 853,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 846,
									"end": 863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 846,
									"end": 863,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 846,
									"end": 863,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 846,
									"end": 863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 846,
									"end": 863,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 846,
									"end": 863,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 846,
									"end": 863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 846,
									"end": 863,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 846,
									"end": 863,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 846,
									"end": 863,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 846,
									"end": 863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 846,
									"end": 863,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 846,
									"end": 863,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 846,
									"end": 863,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 846,
									"end": 863,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 846,
									"end": 863,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 889,
									"end": 901,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 889,
									"end": 901,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 874,
									"end": 886,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 874,
									"end": 901,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 874,
									"end": 901,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 874,
									"end": 901,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 874,
									"end": 901,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 733,
									"end": 909,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 360,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7,
									"end": 360,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 136,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 178,
									"end": 184,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 136,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 136,
									"end": 185,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 136,
									"end": 185,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 136,
									"end": 185,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 121,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 186,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 186,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 186,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 112,
									"end": 186,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 112,
									"end": 186,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 209,
									"end": 215,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 202,
									"end": 207,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 216,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 247,
									"end": 251,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 240,
									"end": 245,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 236,
									"end": 252,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 285,
									"end": 288,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 276,
									"end": 282,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 271,
									"end": 274,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 267,
									"end": 283,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 264,
									"end": 289,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 261,
									"end": 263,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 261,
									"end": 263,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 261,
									"end": 263,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 302,
									"end": 303,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 299,
									"end": 300,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 292,
									"end": 304,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 261,
									"end": 263,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 261,
									"end": 263,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 315,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 347,
									"end": 353,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 342,
									"end": 345,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 337,
									"end": 340,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 315,
									"end": 354,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 315,
									"end": 354,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 315,
									"end": 354,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 315,
									"end": 354,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 102,
									"end": 360,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 102,
									"end": 360,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 102,
									"end": 360,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 102,
									"end": 360,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 102,
									"end": 360,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 102,
									"end": 360,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 102,
									"end": 360,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 380,
									"end": 668,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 380,
									"end": 668,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 380,
									"end": 668,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 499,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 489,
									"end": 493,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 481,
									"end": 487,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 477,
									"end": 494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 473,
									"end": 500,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 463,
									"end": 465,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 463,
									"end": 465,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 514,
									"end": 515,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 511,
									"end": 512,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 504,
									"end": 516,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 463,
									"end": 465,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 463,
									"end": 465,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 547,
									"end": 553,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 541,
									"end": 554,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 572,
									"end": 662,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 658,
									"end": 661,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 650,
									"end": 656,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 643,
									"end": 647,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 635,
									"end": 641,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 631,
									"end": 648,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 572,
									"end": 662,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 572,
									"end": 662,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 572,
									"end": 662,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 572,
									"end": 662,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 563,
									"end": 662,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 563,
									"end": 662,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 453,
									"end": 668,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 453,
									"end": 668,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 453,
									"end": 668,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 453,
									"end": 668,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 453,
									"end": 668,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 453,
									"end": 668,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 674,
									"end": 817,
									"name": "tag",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 674,
									"end": 817,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 674,
									"end": 817,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 762,
									"end": 768,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 756,
									"end": 769,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 747,
									"end": 769,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 747,
									"end": 769,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 778,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 805,
									"end": 810,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 778,
									"end": 811,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 778,
									"end": 811,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 778,
									"end": 811,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 778,
									"end": 811,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 737,
									"end": 817,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 737,
									"end": 817,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 737,
									"end": 817,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 737,
									"end": 817,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 737,
									"end": 817,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 823,
									"end": 1631,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 823,
									"end": 1631,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 823,
									"end": 1631,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 823,
									"end": 1631,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 823,
									"end": 1631,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 998,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 984,
									"end": 993,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 975,
									"end": 982,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 971,
									"end": 994,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 967,
									"end": 999,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 964,
									"end": 966,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1012,
									"end": 1013,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1009,
									"end": 1010,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1002,
									"end": 1014,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 964,
									"end": 966,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1076,
									"end": 1077,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1065,
									"end": 1074,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1061,
									"end": 1078,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1055,
									"end": 1079,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1106,
									"end": 1124,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1095,
									"end": 1125,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1092,
									"end": 1094,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1092,
									"end": 1094,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1092,
									"end": 1094,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1138,
									"end": 1139,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1135,
									"end": 1136,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1128,
									"end": 1140,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1092,
									"end": 1094,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1092,
									"end": 1094,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1166,
									"end": 1240,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1232,
									"end": 1239,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1223,
									"end": 1229,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1212,
									"end": 1221,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1208,
									"end": 1230,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1166,
									"end": 1240,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1166,
									"end": 1240,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1166,
									"end": 1240,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 1166,
									"end": 1240,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1156,
									"end": 1240,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 1156,
									"end": 1240,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1026,
									"end": 1250,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1310,
									"end": 1312,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1299,
									"end": 1308,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1295,
									"end": 1313,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1289,
									"end": 1314,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1341,
									"end": 1359,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1333,
									"end": 1339,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1330,
									"end": 1360,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1327,
									"end": 1329,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1327,
									"end": 1329,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1327,
									"end": 1329,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1373,
									"end": 1374,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1370,
									"end": 1371,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1363,
									"end": 1375,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1327,
									"end": 1329,
									"name": "tag",
									"source": 5,
									"value": "43"
								},
								{
									"begin": 1327,
									"end": 1329,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1401,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1467,
									"end": 1474,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1458,
									"end": 1464,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1456,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1443,
									"end": 1465,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1401,
									"end": 1475,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1401,
									"end": 1475,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1401,
									"end": 1475,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1401,
									"end": 1475,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1391,
									"end": 1475,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1391,
									"end": 1475,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1260,
									"end": 1485,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1524,
									"end": 1526,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1550,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1606,
									"end": 1613,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1597,
									"end": 1603,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1586,
									"end": 1595,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1604,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1550,
									"end": 1614,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "35"
								},
								{
									"begin": 1550,
									"end": 1614,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1550,
									"end": 1614,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1550,
									"end": 1614,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1540,
									"end": 1614,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1540,
									"end": 1614,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1495,
									"end": 1624,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1631,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1631,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1631,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1631,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1631,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 954,
									"end": 1631,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1637,
									"end": 1920,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1637,
									"end": 1920,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1637,
									"end": 1920,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1703,
									"end": 1705,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1697,
									"end": 1706,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1687,
									"end": 1706,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1687,
									"end": 1706,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1745,
									"end": 1749,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1737,
									"end": 1743,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1733,
									"end": 1750,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1852,
									"end": 1858,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1840,
									"end": 1850,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1837,
									"end": 1859,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1816,
									"end": 1834,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1804,
									"end": 1814,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1801,
									"end": 1835,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1798,
									"end": 1860,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1863,
									"end": 1881,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1863,
									"end": 1881,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 1863,
									"end": 1881,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1863,
									"end": 1881,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1863,
									"end": 1881,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1903,
									"end": 1913,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1899,
									"end": 1901,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1892,
									"end": 1914,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1677,
									"end": 1920,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1677,
									"end": 1920,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1677,
									"end": 1920,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1677,
									"end": 1920,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1677,
									"end": 1920,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1926,
									"end": 2258,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1926,
									"end": 2258,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1926,
									"end": 2258,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2078,
									"end": 2096,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2070,
									"end": 2076,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2067,
									"end": 2097,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2064,
									"end": 2066,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2064,
									"end": 2066,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2064,
									"end": 2066,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2100,
									"end": 2118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2100,
									"end": 2118,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 2100,
									"end": 2118,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2100,
									"end": 2118,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 2100,
									"end": 2118,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2064,
									"end": 2066,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 2064,
									"end": 2066,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2185,
									"end": 2189,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2181,
									"end": 2190,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2174,
									"end": 2178,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2172,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2162,
									"end": 2179,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2158,
									"end": 2191,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2150,
									"end": 2191,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2150,
									"end": 2191,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2246,
									"end": 2250,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2240,
									"end": 2244,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2236,
									"end": 2251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2228,
									"end": 2251,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2228,
									"end": 2251,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1993,
									"end": 2258,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1993,
									"end": 2258,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1993,
									"end": 2258,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1993,
									"end": 2258,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2264,
									"end": 2341,
									"name": "tag",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 2264,
									"end": 2341,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2264,
									"end": 2341,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2330,
									"end": 2335,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2319,
									"end": 2335,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2319,
									"end": 2335,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2309,
									"end": 2341,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2309,
									"end": 2341,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2309,
									"end": 2341,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2309,
									"end": 2341,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2347,
									"end": 2654,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 2347,
									"end": 2654,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2415,
									"end": 2416,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2425,
									"end": 2538,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2425,
									"end": 2538,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2439,
									"end": 2445,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2436,
									"end": 2437,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2446,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2425,
									"end": 2538,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2425,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 2425,
									"end": 2538,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2519,
									"end": 2522,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2515,
									"end": 2526,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2509,
									"end": 2527,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 2505,
									"end": 2506,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2500,
									"end": 2503,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2496,
									"end": 2507,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2489,
									"end": 2528,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2458,
									"end": 2459,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2454,
									"end": 2464,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2449,
									"end": 2464,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2449,
									"end": 2464,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2425,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2425,
									"end": 2538,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2425,
									"end": 2538,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 2425,
									"end": 2538,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2556,
									"end": 2562,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 2553,
									"end": 2554,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2550,
									"end": 2563,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2547,
									"end": 2549,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2547,
									"end": 2549,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 2547,
									"end": 2549,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2636,
									"end": 2637,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2633,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2622,
									"end": 2625,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2618,
									"end": 2634,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2611,
									"end": 2638,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2547,
									"end": 2549,
									"name": "tag",
									"source": 5,
									"value": "59"
								},
								{
									"begin": 2547,
									"end": 2549,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2396,
									"end": 2654,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2396,
									"end": 2654,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2396,
									"end": 2654,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2396,
									"end": 2654,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2396,
									"end": 2654,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2660,
									"end": 2980,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 2660,
									"end": 2980,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2660,
									"end": 2980,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2741,
									"end": 2742,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 2735,
									"end": 2739,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2731,
									"end": 2743,
									"name": "DIV",
									"source": 5
								},
								{
									"begin": 2721,
									"end": 2743,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2721,
									"end": 2743,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2788,
									"end": 2789,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2782,
									"end": 2786,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2778,
									"end": 2790,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2809,
									"end": 2827,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2799,
									"end": 2801,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 2799,
									"end": 2801,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2865,
									"end": 2869,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 2857,
									"end": 2863,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2853,
									"end": 2870,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 2870,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2843,
									"end": 2870,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2799,
									"end": 2801,
									"name": "tag",
									"source": 5,
									"value": "61"
								},
								{
									"begin": 2799,
									"end": 2801,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2927,
									"end": 2929,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2919,
									"end": 2925,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2916,
									"end": 2930,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2896,
									"end": 2914,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2893,
									"end": 2931,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 2890,
									"end": 2892,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2890,
									"end": 2892,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2890,
									"end": 2892,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2946,
									"end": 2964,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2946,
									"end": 2964,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 2946,
									"end": 2964,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 2946,
									"end": 2964,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2946,
									"end": 2964,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2890,
									"end": 2892,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2890,
									"end": 2892,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2711,
									"end": 2980,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2711,
									"end": 2980,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2711,
									"end": 2980,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2711,
									"end": 2980,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2711,
									"end": 2980,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 2986,
									"end": 3166,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 2986,
									"end": 3166,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3034,
									"end": 3111,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3031,
									"end": 3032,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3024,
									"end": 3112,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3131,
									"end": 3135,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 3128,
									"end": 3129,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3121,
									"end": 3136,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3155,
									"end": 3159,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3152,
									"end": 3153,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3145,
									"end": 3160,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3172,
									"end": 3352,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3172,
									"end": 3352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3220,
									"end": 3297,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3217,
									"end": 3218,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3210,
									"end": 3298,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3317,
									"end": 3321,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 3314,
									"end": 3315,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 3307,
									"end": 3322,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 3341,
									"end": 3345,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 3338,
									"end": 3339,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3331,
									"end": 3346,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3358,
									"end": 3480,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 3358,
									"end": 3480,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 3449,
									"end": 3454,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "53"
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "tag",
									"source": 5,
									"value": "68"
								},
								{
									"begin": 3431,
									"end": 3455,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3424,
									"end": 3429,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3421,
									"end": 3456,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3411,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3411,
									"end": 3413,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3470,
									"end": 3471,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3467,
									"end": 3468,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 3460,
									"end": 3472,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 3411,
									"end": 3413,
									"name": "tag",
									"source": 5,
									"value": "69"
								},
								{
									"begin": 3411,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3401,
									"end": 3480,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3401,
									"end": 3480,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 259,
									"end": 7104,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e7358b1fb3dbdbe02b4fba01ae04e72a559377068eaef5cafde738fa5f269bbe64736f6c63430008000033",
									".code": [
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 7104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1001,
											"end": 1014,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1034,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1027,
											"end": 1039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 947,
											"end": 1047,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2581,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2603,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2612,
											"end": 2624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2612,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2612,
											"end": 2624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2612,
											"end": 2624,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2612,
											"end": 2624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2633,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2635,
											"end": 2641,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2603,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2603,
											"end": 2642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2603,
											"end": 2642,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2603,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2462,
											"end": 2672,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1463,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1463,
											"end": 1482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1382,
											"end": 1490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2921,
											"end": 2925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2956,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2938,
											"end": 2947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2938,
											"end": 2974,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2938,
											"end": 2974,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2938,
											"end": 2974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3025,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3032,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3033,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3034,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3034,
											"end": 3046,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3046,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3034,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3014,
											"end": 3047,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3047,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2987,
											"end": 3047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3100,
											"end": 3106,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3106,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3080,
											"end": 3106,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3219,
											"end": 3225,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3227,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3227,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3227,
											"end": 3239,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3239,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3227,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3257,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3210,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3210,
											"end": 3267,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3210,
											"end": 3267,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3210,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3298,
											"end": 3302,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3291,
											"end": 3302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 3310,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1330,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1321,
											"end": 1330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1321,
											"end": 1330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1245,
											"end": 1338,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3490,
											"end": 3494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3512,
											"end": 3642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3535,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3535,
											"end": 3545,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3535,
											"end": 3547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3535,
											"end": 3547,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 3535,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3569,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3621,
											"end": 3631,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3596,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3596,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3609,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3617,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3618,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3584,
											"end": 3631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3584,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3584,
											"end": 3631,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3584,
											"end": 3631,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 3584,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3512,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 3512,
											"end": 3642,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3512,
											"end": 3642,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 3512,
											"end": 3642,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3660,
											"end": 3664,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3653,
											"end": 3664,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3375,
											"end": 3672,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1662,
											"end": 1669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1703,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1711,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1712,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1687,
											"end": 1712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1543,
											"end": 1720,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1154,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1174,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1167,
											"end": 1181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1189,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3857,
											"end": 3861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 3903,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3917,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3918,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3918,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 3918,
											"end": 3930,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3918,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3918,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3931,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3939,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 3940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3993,
											"end": 4008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 3989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4008,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3973,
											"end": 4008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3951,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 4176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4118,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4139,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4160,
											"end": 4175,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4141,
											"end": 4175,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4109,
											"end": 4176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4109,
											"end": 4176,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4109,
											"end": 4176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4207,
											"end": 4211,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4200,
											"end": 4211,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4200,
											"end": 4211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4200,
											"end": 4211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3737,
											"end": 4219,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2000,
											"end": 2004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2032,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2032,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2032,
											"end": 2044,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2032,
											"end": 2044,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2032,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2046,
											"end": 2055,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2057,
											"end": 2063,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2022,
											"end": 2031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2022,
											"end": 2064,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2022,
											"end": 2064,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2022,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2082,
											"end": 2086,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2075,
											"end": 2086,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2075,
											"end": 2086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1878,
											"end": 2094,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2364,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2371,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2379,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2353,
											"end": 2380,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2346,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2346,
											"end": 2380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2388,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 480,
											"end": 578,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 480,
											"end": 578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 533,
											"end": 540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 570,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 553,
											"end": 570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 553,
											"end": 570,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 480,
											"end": 578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 480,
											"end": 578,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6304,
											"end": 6684,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6304,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6457,
											"end": 6458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6440,
											"end": 6459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6440,
											"end": 6459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6440,
											"end": 6445,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6440,
											"end": 6459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6440,
											"end": 6459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6440,
											"end": 6459,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6440,
											"end": 6459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6432,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6538,
											"end": 6539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6519,
											"end": 6540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6519,
											"end": 6540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6519,
											"end": 6540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6540,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6519,
											"end": 6540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 6511,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6603,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6604,
											"end": 6609,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6611,
											"end": 6618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6592,
											"end": 6619,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6628,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 6667,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6653,
											"end": 6658,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 6669,
											"end": 6675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6644,
											"end": 6676,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6304,
											"end": 6684,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4290,
											"end": 5060,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 4290,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4430,
											"end": 4436,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4430,
											"end": 4450,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4422,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4532,
											"end": 4533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4511,
											"end": 4534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4511,
											"end": 4534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4534,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4511,
											"end": 4534,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 4503,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4587,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4608,
											"end": 4614,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4616,
											"end": 4625,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4627,
											"end": 4633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4587,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 4587,
											"end": 4634,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4587,
											"end": 4634,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4587,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4647,
											"end": 4668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4687,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4671,
											"end": 4688,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4647,
											"end": 4688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4647,
											"end": 4688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4721,
											"end": 4734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4721,
											"end": 4744,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4721,
											"end": 4744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 4699,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4882,
											"end": 4888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4866,
											"end": 4879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4866,
											"end": 4888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4846,
											"end": 4863,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4888,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4934,
											"end": 4940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4920,
											"end": 4929,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4910,
											"end": 4940,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4975,
											"end": 4984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 4986,
											"end": 4992,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4958,
											"end": 4993,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5026,
											"end": 5032,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5043,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5051,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 5006,
											"end": 5052,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5006,
											"end": 5052,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 5006,
											"end": 5052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 5060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 5060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 5060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 5060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 5060,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6768,
											"end": 6893,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6768,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6893,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6768,
											"end": 6893,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6977,
											"end": 7101,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 6977,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6977,
											"end": 7101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6977,
											"end": 7101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6977,
											"end": 7101,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6977,
											"end": 7101,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 297,
											"end": 559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 435,
											"end": 552,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 363,
											"end": 559,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 565,
											"end": 972,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 690,
											"end": 692,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 687,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 669,
											"end": 676,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 665,
											"end": 688,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 658,
											"end": 660,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 706,
											"end": 707,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 704,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 696,
											"end": 708,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 658,
											"end": 660,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 799,
											"end": 808,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 795,
											"end": 817,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 764,
											"end": 827,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 764,
											"end": 827,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 720,
											"end": 837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 876,
											"end": 878,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 947,
											"end": 954,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 923,
											"end": 945,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 892,
											"end": 955,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 892,
											"end": 955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 847,
											"end": 965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 648,
											"end": 972,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1108,
											"end": 1117,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1118,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1249,
											"end": 1256,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1225,
											"end": 1247,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1357,
											"end": 1366,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1277,
											"end": 1395,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1434,
											"end": 1436,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1485,
											"end": 1494,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1503,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1405,
											"end": 1523,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1787,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1766,
											"end": 1788,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1691,
											"end": 1808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1847,
											"end": 1849,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1894,
											"end": 1916,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1936,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2028,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2052,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2434,
											"end": 2801,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 2434,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2434,
											"end": 2801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 2656,
											"end": 2659,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2664,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2590,
											"end": 2664,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2694,
											"end": 2728,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2690,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2688,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2681,
											"end": 2692,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2674,
											"end": 2729,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2760,
											"end": 2765,
											"name": "PUSH",
											"source": 5,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2755,
											"end": 2757,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2792,
											"end": 2794,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2787,
											"end": 2790,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2795,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2795,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2776,
											"end": 2795,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2807,
											"end": 3173,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 2807,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 3173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 3034,
											"end": 3036,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2963,
											"end": 3037,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2963,
											"end": 3037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3067,
											"end": 3101,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3061,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3054,
											"end": 3065,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3047,
											"end": 3102,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "PUSH",
											"source": 5,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3126,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3119,
											"end": 3131,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3112,
											"end": 3138,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3164,
											"end": 3166,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3155,
											"end": 3167,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3179,
											"end": 3549,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 3179,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3179,
											"end": 3549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3406,
											"end": 3408,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 3401,
											"end": 3404,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3335,
											"end": 3409,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3335,
											"end": 3409,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3439,
											"end": 3473,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3433,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3426,
											"end": 3437,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3474,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3505,
											"end": 3513,
											"name": "PUSH",
											"source": 5,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3500,
											"end": 3502,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3495,
											"end": 3498,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3491,
											"end": 3503,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3484,
											"end": 3514,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3535,
											"end": 3538,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3543,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3549,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3325,
											"end": 3549,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3555,
											"end": 3927,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 3555,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3555,
											"end": 3927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3718,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 3718,
											"end": 3785,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3718,
											"end": 3785,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 3718,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3785,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3785,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3815,
											"end": 3849,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3811,
											"end": 3812,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3802,
											"end": 3813,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3795,
											"end": 3850,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3891,
											"name": "PUSH",
											"source": 5,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3876,
											"end": 3878,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3874,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3867,
											"end": 3879,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3860,
											"end": 3892,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3918,
											"end": 3920,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3913,
											"end": 3916,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3921,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3902,
											"end": 3921,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3701,
											"end": 3927,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3701,
											"end": 3927,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3701,
											"end": 3927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3701,
											"end": 3927,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3933,
											"end": 4302,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3933,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3933,
											"end": 4302,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4160,
											"end": 4162,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4155,
											"end": 4158,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4096,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 4096,
											"end": 4163,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4163,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 4096,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4089,
											"end": 4163,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4089,
											"end": 4163,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4193,
											"end": 4227,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4189,
											"end": 4190,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4187,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4180,
											"end": 4191,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4173,
											"end": 4228,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4259,
											"end": 4266,
											"name": "PUSH",
											"source": 5,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4252,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4245,
											"end": 4257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4238,
											"end": 4267,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4295,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4291,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4284,
											"end": 4296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4277,
											"end": 4296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4302,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4302,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4302,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4079,
											"end": 4302,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4308,
											"end": 4676,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 4308,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4308,
											"end": 4676,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4530,
											"end": 4533,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 4471,
											"end": 4538,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4471,
											"end": 4538,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 4471,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4464,
											"end": 4538,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4568,
											"end": 4602,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4564,
											"end": 4565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4562,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4555,
											"end": 4566,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4548,
											"end": 4603,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4634,
											"end": 4640,
											"name": "PUSH",
											"source": 5,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4613,
											"end": 4641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4667,
											"end": 4669,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4662,
											"end": 4665,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4651,
											"end": 4670,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4651,
											"end": 4670,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4676,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4676,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4676,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4676,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4682,
											"end": 5051,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 4682,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4682,
											"end": 5051,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4909,
											"end": 4911,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4904,
											"end": 4907,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4845,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 4845,
											"end": 4912,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4912,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 4845,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4838,
											"end": 4912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4942,
											"end": 4976,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4938,
											"end": 4939,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4936,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4929,
											"end": 4940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4977,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5015,
											"name": "PUSH",
											"source": 5,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4998,
											"end": 5001,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4994,
											"end": 5006,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4987,
											"end": 5016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5042,
											"end": 5044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5040,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5033,
											"end": 5045,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5045,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5026,
											"end": 5045,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 5051,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 5051,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 5051,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4828,
											"end": 5051,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5057,
											"end": 5175,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 5057,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 5162,
											"end": 5167,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 5144,
											"end": 5168,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5144,
											"end": 5168,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 5144,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5139,
											"end": 5142,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5132,
											"end": 5169,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5175,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5175,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5181,
											"end": 5293,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 5181,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5280,
											"end": 5285,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5259,
											"end": 5262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5252,
											"end": 5287,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5293,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5299,
											"end": 5509,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5299,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5509,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5427,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5427,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5437,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5499,
											"end": 5500,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5497,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5437,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 5437,
											"end": 5502,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5437,
											"end": 5502,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 5437,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5509,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5509,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5509,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5391,
											"end": 5509,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5515,
											"end": 5828,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 5515,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5515,
											"end": 5828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5668,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5655,
											"end": 5664,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5669,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5669,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5715,
											"end": 5724,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5709,
											"end": 5713,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5705,
											"end": 5725,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5701,
											"end": 5702,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5699,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5686,
											"end": 5703,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5726,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5816,
											"end": 5820,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5807,
											"end": 5813,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 5743,
											"end": 5821,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5743,
											"end": 5821,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 5743,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5633,
											"end": 5828,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5633,
											"end": 5828,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5633,
											"end": 5828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5633,
											"end": 5828,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5633,
											"end": 5828,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5834,
											"end": 6253,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 5834,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5834,
											"end": 6253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6040,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6036,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6041,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6015,
											"end": 6041,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6087,
											"end": 6096,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6081,
											"end": 6085,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6077,
											"end": 6097,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6073,
											"end": 6074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6062,
											"end": 6071,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6058,
											"end": 6075,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6051,
											"end": 6098,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6241,
											"end": 6245,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6115,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6115,
											"end": 6246,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6115,
											"end": 6246,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 6115,
											"end": 6246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6107,
											"end": 6246,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6107,
											"end": 6246,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6005,
											"end": 6253,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6005,
											"end": 6253,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6005,
											"end": 6253,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6005,
											"end": 6253,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6259,
											"end": 6678,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6259,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6259,
											"end": 6678,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6465,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6448,
											"end": 6466,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6440,
											"end": 6466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6440,
											"end": 6466,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6512,
											"end": 6521,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6506,
											"end": 6510,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6502,
											"end": 6522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6498,
											"end": 6499,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6496,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6483,
											"end": 6500,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6476,
											"end": 6523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6666,
											"end": 6670,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6540,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 6540,
											"end": 6671,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6540,
											"end": 6671,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 6540,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6671,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6532,
											"end": 6671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6678,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6678,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6684,
											"end": 7103,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 6684,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6684,
											"end": 7103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6886,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6873,
											"end": 6891,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6865,
											"end": 6891,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6865,
											"end": 6891,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6937,
											"end": 6946,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6931,
											"end": 6935,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6927,
											"end": 6947,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6923,
											"end": 6924,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6921,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6908,
											"end": 6925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6901,
											"end": 6948,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6965,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 7091,
											"end": 7095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6965,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 6965,
											"end": 7096,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6965,
											"end": 7096,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 6965,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6957,
											"end": 7096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6957,
											"end": 7096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6855,
											"end": 7103,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6855,
											"end": 7103,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6855,
											"end": 7103,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6855,
											"end": 7103,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7109,
											"end": 7528,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 7109,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7109,
											"end": 7528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7315,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7298,
											"end": 7316,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7290,
											"end": 7316,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7290,
											"end": 7316,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7362,
											"end": 7371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7356,
											"end": 7360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7352,
											"end": 7372,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7348,
											"end": 7349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7337,
											"end": 7346,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7326,
											"end": 7373,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7390,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7516,
											"end": 7520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7390,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 7390,
											"end": 7521,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7390,
											"end": 7521,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 7390,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7382,
											"end": 7521,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7382,
											"end": 7521,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7280,
											"end": 7528,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7280,
											"end": 7528,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7280,
											"end": 7528,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7280,
											"end": 7528,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7534,
											"end": 7953,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 7534,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7534,
											"end": 7953,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7727,
											"end": 7736,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7715,
											"end": 7741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7787,
											"end": 7796,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7781,
											"end": 7785,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7777,
											"end": 7797,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7773,
											"end": 7774,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7762,
											"end": 7771,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7941,
											"end": 7945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7807,
											"end": 7946,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7807,
											"end": 7946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7705,
											"end": 7953,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7705,
											"end": 7953,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7705,
											"end": 7953,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7705,
											"end": 7953,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7959,
											"end": 8378,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 7959,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7959,
											"end": 8378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8152,
											"end": 8161,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8148,
											"end": 8166,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8140,
											"end": 8166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8140,
											"end": 8166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8198,
											"end": 8199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8187,
											"end": 8196,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8183,
											"end": 8200,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8176,
											"end": 8223,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8240,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8366,
											"end": 8370,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8240,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 8240,
											"end": 8371,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8240,
											"end": 8371,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8240,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8232,
											"end": 8371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8232,
											"end": 8371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8378,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8378,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8378,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8130,
											"end": 8378,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8384,
											"end": 8803,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 8384,
											"end": 8803,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8384,
											"end": 8803,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8590,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8577,
											"end": 8586,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8573,
											"end": 8591,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8591,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8565,
											"end": 8591,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8637,
											"end": 8646,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8631,
											"end": 8635,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8627,
											"end": 8647,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8623,
											"end": 8624,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8621,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8608,
											"end": 8625,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8601,
											"end": 8648,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8665,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 8791,
											"end": 8795,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8665,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 8665,
											"end": 8796,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8665,
											"end": 8796,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 8665,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8657,
											"end": 8796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8657,
											"end": 8796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8555,
											"end": 8803,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8555,
											"end": 8803,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8555,
											"end": 8803,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8555,
											"end": 8803,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8809,
											"end": 9031,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 8809,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8809,
											"end": 9031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8942,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8925,
											"end": 8943,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8917,
											"end": 8943,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8917,
											"end": 8943,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8953,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9010,
											"end": 9019,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9006,
											"end": 9023,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8997,
											"end": 9003,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8953,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 8953,
											"end": 9024,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8953,
											"end": 9024,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 8953,
											"end": 9024,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8907,
											"end": 9031,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8907,
											"end": 9031,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8907,
											"end": 9031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8907,
											"end": 9031,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8907,
											"end": 9031,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9037,
											"end": 9251,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 9037,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9037,
											"end": 9251,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9164,
											"end": 9166,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9153,
											"end": 9162,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9149,
											"end": 9167,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9141,
											"end": 9167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9141,
											"end": 9167,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 9241,
											"end": 9242,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9230,
											"end": 9239,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9226,
											"end": 9243,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9217,
											"end": 9223,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9131,
											"end": 9251,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9131,
											"end": 9251,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9131,
											"end": 9251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9131,
											"end": 9251,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9131,
											"end": 9251,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9257,
											"end": 9356,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 9257,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9257,
											"end": 9356,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9343,
											"end": 9348,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9337,
											"end": 9349,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9349,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9327,
											"end": 9349,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9316,
											"end": 9356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9316,
											"end": 9356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9316,
											"end": 9356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9316,
											"end": 9356,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9362,
											"end": 9531,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9362,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9362,
											"end": 9531,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9486,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9475,
											"end": 9478,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9468,
											"end": 9487,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9520,
											"end": 9524,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9515,
											"end": 9518,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9511,
											"end": 9525,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9496,
											"end": 9525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9496,
											"end": 9525,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9531,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9531,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9531,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9458,
											"end": 9531,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9537,
											"end": 9842,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 9537,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9537,
											"end": 9842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9596,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9614,
											"end": 9615,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 9596,
											"end": 9616,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9596,
											"end": 9616,
											"name": "tag",
											"source": 5,
											"value": "230"
										},
										{
											"begin": 9596,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9591,
											"end": 9616,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9591,
											"end": 9616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9648,
											"end": 9649,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9625,
											"end": 9650,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9625,
											"end": 9650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9784,
											"end": 9785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9716,
											"end": 9782,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9712,
											"end": 9786,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9709,
											"end": 9710,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9706,
											"end": 9787,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9790,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 9790,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 9790,
											"end": 9808,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9790,
											"end": 9808,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 9790,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9831,
											"end": 9832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9827,
											"end": 9836,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9820,
											"end": 9836,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9820,
											"end": 9836,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9842,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9842,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9842,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9842,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9848,
											"end": 9944,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 9848,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9848,
											"end": 9944,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9914,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9932,
											"end": 9937,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9914,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9914,
											"end": 9938,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9914,
											"end": 9938,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9914,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9903,
											"end": 9938,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9903,
											"end": 9938,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9893,
											"end": 9944,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9893,
											"end": 9944,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9893,
											"end": 9944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9893,
											"end": 9944,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9950,
											"end": 10040,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 9950,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9950,
											"end": 10040,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10027,
											"end": 10032,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10020,
											"end": 10033,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10013,
											"end": 10034,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10002,
											"end": 10034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10002,
											"end": 10034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9992,
											"end": 10040,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9992,
											"end": 10040,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9992,
											"end": 10040,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9992,
											"end": 10040,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10046,
											"end": 10172,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 10046,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10046,
											"end": 10172,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10123,
											"end": 10165,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10116,
											"end": 10121,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10112,
											"end": 10166,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10166,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10101,
											"end": 10166,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10172,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10172,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10172,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10091,
											"end": 10172,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10178,
											"end": 10255,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 10178,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10178,
											"end": 10255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10244,
											"end": 10249,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10233,
											"end": 10249,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10223,
											"end": 10255,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10223,
											"end": 10255,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10223,
											"end": 10255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10223,
											"end": 10255,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10261,
											"end": 10347,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 10261,
											"end": 10347,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10261,
											"end": 10347,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10336,
											"end": 10340,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 10329,
											"end": 10334,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10325,
											"end": 10341,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10314,
											"end": 10341,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10314,
											"end": 10341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10304,
											"end": 10347,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10304,
											"end": 10347,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10304,
											"end": 10347,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10304,
											"end": 10347,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10353,
											"end": 10660,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 10353,
											"end": 10660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10421,
											"end": 10422,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10431,
											"end": 10544,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 10431,
											"end": 10544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10445,
											"end": 10451,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10442,
											"end": 10443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10439,
											"end": 10452,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10431,
											"end": 10544,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10431,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 10431,
											"end": 10544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10530,
											"end": 10531,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10525,
											"end": 10528,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10521,
											"end": 10532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10515,
											"end": 10533,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10511,
											"end": 10512,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10506,
											"end": 10509,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10502,
											"end": 10513,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10495,
											"end": 10534,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10467,
											"end": 10469,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10464,
											"end": 10465,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10460,
											"end": 10470,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10455,
											"end": 10470,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10455,
											"end": 10470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10431,
											"end": 10544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 10431,
											"end": 10544,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10431,
											"end": 10544,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 10431,
											"end": 10544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10562,
											"end": 10568,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10559,
											"end": 10560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10556,
											"end": 10569,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 10553,
											"end": 10555,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10553,
											"end": 10555,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10553,
											"end": 10555,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10642,
											"end": 10643,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10639,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10628,
											"end": 10631,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 10624,
											"end": 10640,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10617,
											"end": 10644,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10553,
											"end": 10555,
											"name": "tag",
											"source": 5,
											"value": "247"
										},
										{
											"begin": 10553,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10402,
											"end": 10660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10402,
											"end": 10660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10402,
											"end": 10660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10402,
											"end": 10660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10402,
											"end": 10660,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10666,
											"end": 10986,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 10666,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10666,
											"end": 10986,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10747,
											"end": 10748,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 10741,
											"end": 10745,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10737,
											"end": 10749,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 10727,
											"end": 10749,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10727,
											"end": 10749,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10794,
											"end": 10795,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 10788,
											"end": 10792,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10784,
											"end": 10796,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10815,
											"end": 10833,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10805,
											"end": 10807,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 10805,
											"end": 10807,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10871,
											"end": 10875,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 10863,
											"end": 10869,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10859,
											"end": 10876,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10849,
											"end": 10876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10849,
											"end": 10876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10805,
											"end": 10807,
											"name": "tag",
											"source": 5,
											"value": "249"
										},
										{
											"begin": 10805,
											"end": 10807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10933,
											"end": 10935,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10925,
											"end": 10931,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10922,
											"end": 10936,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 10902,
											"end": 10920,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10899,
											"end": 10937,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10896,
											"end": 10898,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 10896,
											"end": 10898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 10896,
											"end": 10898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "tag",
											"source": 5,
											"value": "251"
										},
										{
											"begin": 10952,
											"end": 10970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10896,
											"end": 10898,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 10896,
											"end": 10898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10717,
											"end": 10986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10717,
											"end": 10986,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10717,
											"end": 10986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10717,
											"end": 10986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10717,
											"end": 10986,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10992,
											"end": 11172,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 10992,
											"end": 11172,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11040,
											"end": 11117,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11037,
											"end": 11038,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11030,
											"end": 11118,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11137,
											"end": 11141,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 11134,
											"end": 11135,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11127,
											"end": 11142,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11161,
											"end": 11165,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11158,
											"end": 11159,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11151,
											"end": 11166,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11178,
											"end": 11358,
											"name": "tag",
											"source": 5,
											"value": "252"
										},
										{
											"begin": 11178,
											"end": 11358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11226,
											"end": 11303,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11223,
											"end": 11224,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11216,
											"end": 11304,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11323,
											"end": 11327,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 11320,
											"end": 11321,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 11313,
											"end": 11328,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11347,
											"end": 11351,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 11344,
											"end": 11345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11337,
											"end": 11352,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11364,
											"end": 11466,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 11364,
											"end": 11466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11364,
											"end": 11466,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11456,
											"end": 11458,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 11452,
											"end": 11459,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 11447,
											"end": 11449,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 11440,
											"end": 11445,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 11436,
											"end": 11450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11432,
											"end": 11460,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 11422,
											"end": 11460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11422,
											"end": 11460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11412,
											"end": 11466,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 11412,
											"end": 11466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 11412,
											"end": 11466,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11412,
											"end": 11466,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11472,
											"end": 11594,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 11472,
											"end": 11594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11545,
											"end": 11569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 11563,
											"end": 11568,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11545,
											"end": 11569,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 11545,
											"end": 11569,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11545,
											"end": 11569,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 11545,
											"end": 11569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11538,
											"end": 11543,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11535,
											"end": 11570,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11525,
											"end": 11527,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 11525,
											"end": 11527,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11585,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11581,
											"end": 11582,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11574,
											"end": 11586,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11525,
											"end": 11527,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 11525,
											"end": 11527,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11515,
											"end": 11594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11515,
											"end": 11594,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11600,
											"end": 11722,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 11600,
											"end": 11722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11673,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11691,
											"end": 11696,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11673,
											"end": 11697,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 11673,
											"end": 11697,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11673,
											"end": 11697,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 11673,
											"end": 11697,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11666,
											"end": 11671,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11663,
											"end": 11698,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11653,
											"end": 11655,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11653,
											"end": 11655,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11712,
											"end": 11713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11709,
											"end": 11710,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11702,
											"end": 11714,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11653,
											"end": 11655,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 11653,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11643,
											"end": 11722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11643,
											"end": 11722,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply_\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"deloy:\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/01_ERC20_token.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/01_ERC20_token.sol\":{\"keccak256\":\"0x057edcf948c9dad1f6be82ba75b351ffeef63eaccac7f2153e14581bc4a19a11\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aaf00a7b27e72e4f621ce37ac05840bba2a4b486463db589889b9b2ede2e38ce\",\"dweb:/ipfs/QmPYmTvHPr3mhgisLyjMAT1tg4KPgm3wjiPh4aQbvLy27i\"]},\"contracts/abstracts/Context.sol\":{\"keccak256\":\"0x014ae7d7ba7ae65350cbc0aab8435dac24c76dde35f1c840648927400d9e05c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ad351cbf6b1a2cbc57dcddd244b512e58a3313ad222f37ac0e2af5e735a3c29\",\"dweb:/ipfs/QmV5XwGhEg2uMXSNcJ8m7hU3N5AL47DrLRnjV5AdvMGAB3\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x85b4dd45947906e7783cab7aa1da7da6bdae578826dd00fc15a7d12fad7ca539\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2b3b8a1a50e2f94aa13e18ae353143c23f7af5254a8a515ba2ef90ddb8d4a8\",\"dweb:/ipfs/QmZmSd5kw2pFaEu6CPLaeLgXEWyXfLQMK55YscUVNbRZiG\"]},\"contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x1b6c851b1d91625f314b3655c0bdf702e33c5dcd1aeccf5923313e8a608bb766\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ddd59f90c87c10e1635404ffbb4b7b75750385eed23aba954bf221384a42dfe\",\"dweb:/ipfs/QmSebEZokq9w6La3Y2vGaAJs29BgmviKbpmdvMpjFF1VCx\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x04fc07f71367526562109beacc46045316cc79e17e47cee41ac3801bab69890b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4d033a28aa6718c1801754be29e0eb88e3596092f76c850b947db29d7e0042\",\"dweb:/ipfs/QmRDE76JsPWKej5z6WFmR5GatizLHMCh9NZ4kCnZdEgDXj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "contracts/01_ERC20_token.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 25,
								"contract": "contracts/01_ERC20_token.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 27,
								"contract": "contracts/01_ERC20_token.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 29,
								"contract": "contracts/01_ERC20_token.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 31,
								"contract": "contracts/01_ERC20_token.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "deloy:",
						"version": 1
					}
				}
			},
			"contracts/abstracts/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/abstracts/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/abstracts/Context.sol\":{\"keccak256\":\"0x014ae7d7ba7ae65350cbc0aab8435dac24c76dde35f1c840648927400d9e05c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ad351cbf6b1a2cbc57dcddd244b512e58a3313ad222f37ac0e2af5e735a3c29\",\"dweb:/ipfs/QmV5XwGhEg2uMXSNcJ8m7hU3N5AL47DrLRnjV5AdvMGAB3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x85b4dd45947906e7783cab7aa1da7da6bdae578826dd00fc15a7d12fad7ca539\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2b3b8a1a50e2f94aa13e18ae353143c23f7af5254a8a515ba2ef90ddb8d4a8\",\"dweb:/ipfs/QmZmSd5kw2pFaEu6CPLaeLgXEWyXfLQMK55YscUVNbRZiG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x85b4dd45947906e7783cab7aa1da7da6bdae578826dd00fc15a7d12fad7ca539\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2b3b8a1a50e2f94aa13e18ae353143c23f7af5254a8a515ba2ef90ddb8d4a8\",\"dweb:/ipfs/QmZmSd5kw2pFaEu6CPLaeLgXEWyXfLQMK55YscUVNbRZiG\"]},\"contracts/interfaces/IERC20Metadata.sol\":{\"keccak256\":\"0x1b6c851b1d91625f314b3655c0bdf702e33c5dcd1aeccf5923313e8a608bb766\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ddd59f90c87c10e1635404ffbb4b7b75750385eed23aba954bf221384a42dfe\",\"dweb:/ipfs/QmSebEZokq9w6La3Y2vGaAJs29BgmviKbpmdvMpjFF1VCx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":637:6494  library SafeMath {\r... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":637:6494  library SafeMath {\r... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a14e88cfeefd96144d9c1eced4ed4d14931828c8c98038e06f4c21286437d81964736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a14e88cfeefd96144d9c1eced4ed4d14931828c8c98038e06f4c21286437d81964736f6c63430008000033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0x4E DUP9 0xCF 0xEE REVERT SWAP7 EQ 0x4D SWAP13 0x1E 0xCE 0xD4 0xED 0x4D EQ SWAP4 XOR 0x28 0xC8 0xC9 DUP1 CODESIZE 0xE0 PUSH16 0x4C21286437D81964736F6C6343000800 STOP CALLER ",
							"sourceMap": "637:5857:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a14e88cfeefd96144d9c1eced4ed4d14931828c8c98038e06f4c21286437d81964736f6c63430008000033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG1 0x4E DUP9 0xCF 0xEE REVERT SWAP7 EQ 0x4D SWAP13 0x1E 0xCE 0xD4 0xED 0x4D EQ SWAP4 XOR 0x28 0xC8 0xC9 DUP1 CODESIZE 0xE0 PUSH16 0x4C21286437D81964736F6C6343000800 STOP CALLER ",
							"sourceMap": "637:5857:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"add(uint256,uint256,string memory)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"mul(uint256,uint256,string memory)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 637,
									"end": 6494,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a14e88cfeefd96144d9c1eced4ed4d14931828c8c98038e06f4c21286437d81964736f6c63430008000033",
									".code": [
										{
											"begin": 637,
											"end": 6494,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 637,
											"end": 6494,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 637,
											"end": 6494,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 637,
											"end": 6494,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 637,
											"end": 6494,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 637,
											"end": 6494,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 637,
											"end": 6494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 637,
											"end": 6494,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 637,
											"end": 6494,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x04fc07f71367526562109beacc46045316cc79e17e47cee41ac3801bab69890b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4d033a28aa6718c1801754be29e0eb88e3596092f76c850b947db29d7e0042\",\"dweb:/ipfs/QmRDE76JsPWKej5z6WFmR5GatizLHMCh9NZ4kCnZdEgDXj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/01_ERC20_token.sol:32:60:\n   |\n32 |     constructor(string memory name_, string memory symbol_,uint256  totalSupply_) {\n   |                                                            ^^^^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 809,
					"file": "contracts/01_ERC20_token.sol",
					"start": 788
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/01_ERC20_token.sol": {
				"ast": {
					"absolutePath": "contracts/01_ERC20_token.sol",
					"exportedSymbols": {
						"Context": [
							558
						],
						"ERC20": [
							537
						],
						"IERC20": [
							627
						],
						"IERC20Metadata": [
							648
						],
						"SafeMath": [
							909
						]
					},
					"id": 538,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"absolutePath": "contracts/abstracts/Context.sol",
							"file": "./abstracts/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 538,
							"sourceUnit": 559,
							"src": "62:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 538,
							"sourceUnit": 628,
							"src": "97:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20Metadata.sol",
							"file": "./interfaces/IERC20Metadata.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 538,
							"sourceUnit": 649,
							"src": "132:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 538,
							"sourceUnit": 910,
							"src": "175:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 558,
										"src": "277:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "277:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 627,
										"src": "286:6:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "286:6:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 648,
										"src": "294:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "294:14:0"
								}
							],
							"contractDependencies": [
								558,
								627,
								648
							],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "213:19:0",
								"text": "deloy:"
							},
							"fullyImplemented": true,
							"id": 537,
							"linearizedBaseContracts": [
								537,
								648,
								627,
								558
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 15,
									"libraryName": {
										"id": 13,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 909,
										"src": "362:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "356:27:0",
									"typeName": {
										"id": 14,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "375:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 537,
									"src": "393:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 18,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "401:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "393:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 17,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "412:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 537,
									"src": "447:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 24,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "455:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "447:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 23,
											"keyType": {
												"id": 21,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "474:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "466:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 22,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "485:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 537,
									"src": "549:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 26,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "549:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 537,
									"src": "611:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 28,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "611:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 537,
									"src": "660:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 30,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "660:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "811:98:0",
										"statements": [
											{
												"expression": {
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 40,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "822:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 41,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "830:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "822:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "822:13:0"
											},
											{
												"expression": {
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 44,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "846:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 45,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "856:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "846:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "846:17:0"
											},
											{
												"expression": {
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 48,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "874:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 49,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "889:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "874:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "874:27:0"
											}
										]
									},
									"id": 53,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "745:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 32,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "766:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 34,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "766:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "totalSupply_",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "788:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 36,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:66:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "811:0:0"
									},
									"scope": 537,
									"src": "733:176:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										637
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1016:31:0",
										"statements": [
											{
												"expression": {
													"id": 59,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1034:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 58,
												"id": 60,
												"nodeType": "Return",
												"src": "1027:12:0"
											}
										]
									},
									"functionSelector": "06fdde03",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 55,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "983:8:0"
									},
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "960:2:0"
									},
									"returnParameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1001:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 56,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1001:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1000:15:0"
									},
									"scope": 537,
									"src": "947:100:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										642
									],
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "1156:33:0",
										"statements": [
											{
												"expression": {
													"id": 68,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 31,
													"src": "1174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 67,
												"id": 69,
												"nodeType": "Return",
												"src": "1167:14:0"
											}
										]
									},
									"functionSelector": "95d89b41",
									"id": 71,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 64,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1123:8:0"
									},
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1100:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1141:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 65,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1141:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1140:15:0"
									},
									"scope": 537,
									"src": "1085:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										647
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1310:28:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1328:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 76,
												"id": 78,
												"nodeType": "Return",
												"src": "1321:9:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 73,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1285:8:0"
									},
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1262:2:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "1303:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 74,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1303:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1302:7:0"
									},
									"scope": 537,
									"src": "1245:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										565
									],
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1452:38:0",
										"statements": [
											{
												"expression": {
													"id": 86,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "1470:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 85,
												"id": 87,
												"nodeType": "Return",
												"src": "1463:19:0"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 82,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1425:8:0"
									},
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:2:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "1443:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:9:0"
									},
									"scope": 537,
									"src": "1382:108:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										572
									],
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "1676:44:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 97,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1694:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 99,
													"indexExpression": {
														"id": 98,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "1704:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1694:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 96,
												"id": 100,
												"nodeType": "Return",
												"src": "1687:25:0"
											}
										]
									},
									"functionSelector": "70a08231",
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 93,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1635:8:0"
									},
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1562:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1561:17:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "1662:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:9:0"
									},
									"scope": 537,
									"src": "1543:177:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										581
									],
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2011:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 113,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "2032:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2032:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 115,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 104,
															"src": "2046:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "2057:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 112,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "2022:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2022:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "2022:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2082:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 111,
												"id": 120,
												"nodeType": "Return",
												"src": "2075:11:0"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 108,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1973:8:0"
									},
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "1896:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "1915:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1895:35:0"
									},
									"returnParameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2000:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2000:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1999:6:0"
									},
									"scope": 537,
									"src": "1878:216:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										590
									],
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "2335:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 132,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "2353:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 134,
														"indexExpression": {
															"id": 133,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "2365:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2353:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 136,
													"indexExpression": {
														"id": 135,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "2372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2353:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 131,
												"id": 137,
												"nodeType": "Return",
												"src": "2346:34:0"
											}
										]
									},
									"functionSelector": "dd62ed3e",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 128,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2294:8:0"
									},
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2206:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2221:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2205:32:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "2321:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:9:0"
									},
									"scope": 537,
									"src": "2187:201:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										599
									],
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "2592:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 150,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "2612:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2612:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 152,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "2626:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 153,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "2635:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 149,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "2603:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2603:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2603:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2660:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 148,
												"id": 157,
												"nodeType": "Return",
												"src": "2653:11:0"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2554:8:0"
									},
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2479:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2478:33:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "2581:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 146,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2581:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2580:6:0"
									},
									"scope": 537,
									"src": "2462:210:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										610
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2927:383:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 172,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "2948:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 173,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "2956:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 174,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "2967:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 171,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "2938:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2938:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2938:36:0"
											},
											{
												"assignments": [
													178
												],
												"declarations": [
													{
														"constant": false,
														"id": 178,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 205,
														"src": "2987:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 177,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2987:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 185,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 179,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "3014:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 181,
														"indexExpression": {
															"id": 180,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "3026:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3014:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 184,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 182,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "3034:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3034:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3014:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2987:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 187,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 178,
																"src": "3080:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 188,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "3100:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3080:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3121:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3058:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3058:116:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "3058:116:0"
											},
											{
												"id": 202,
												"nodeType": "UncheckedBlock",
												"src": "3185:94:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 194,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "3219:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 195,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "3227:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3227:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 199,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 197,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 178,
																		"src": "3241:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 198,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 165,
																		"src": "3260:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3241:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 193,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "3210:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3210:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 201,
														"nodeType": "ExpressionStatement",
														"src": "3210:57:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3298:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 170,
												"id": 204,
												"nodeType": "Return",
												"src": "3291:11:0"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 167,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2903:8:0"
									},
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2813:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2838:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2866:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2802:85:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2921:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 168,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2921:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2920:6:0"
									},
									"scope": 537,
									"src": "2781:529:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "3501:171:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 216,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "3535:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3535:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 218,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3562:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 219,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 25,
																		"src": "3584:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 222,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 220,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 548,
																			"src": "3596:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3596:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3584:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 224,
																"indexExpression": {
																	"id": 223,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "3610:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3584:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 225,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "3621:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3584:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 215,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 516,
														"src": "3512:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3512:130:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "3512:130:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3660:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 214,
												"id": 230,
												"nodeType": "Return",
												"src": "3653:11:0"
											}
										]
									},
									"functionSelector": "39509351",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "3402:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "3419:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3401:37:0"
									},
									"returnParameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "3490:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3490:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3489:6:0"
									},
									"scope": 537,
									"src": "3375:297:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "3868:351:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 269,
														"src": "3879:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 241,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3879:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 243,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "3906:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 246,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 244,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 548,
																"src": "3918:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3918:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3906:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 248,
													"indexExpression": {
														"id": 247,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "3932:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3906:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3879:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "3973:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "3993:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3973:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4023:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3951:122:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "3951:122:0"
											},
											{
												"id": 266,
												"nodeType": "UncheckedBlock",
												"src": "4084:104:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 258,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "4118:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 259,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4118:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 260,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "4132:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 261,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "4141:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 262,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "4160:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4141:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "4109:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4109:67:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 265,
														"nodeType": "ExpressionStatement",
														"src": "4109:67:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4207:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 240,
												"id": 268,
												"nodeType": "Return",
												"src": "4200:11:0"
											}
										]
									},
									"functionSelector": "a457c2d7",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3764:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3781:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:42:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3857:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3857:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3856:6:0"
									},
									"scope": 537,
									"src": "3737:482:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "4411:649:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "4430:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4448:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4440:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4440:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4440:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4430:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4452:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4422:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "4422:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "4511:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4532:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4524:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4524:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4524:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4511:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4536:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4503:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4503:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4503:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4616:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4627:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "4587:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4587:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "4587:47:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "senderBalance",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "4647:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4647:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "4671:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "4681:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4671:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4647:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "4721:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "4738:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4721:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4759:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4699:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "4699:111:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "4821:79:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "4846:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "4856:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "4846:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "senderBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "4866:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "4882:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4866:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4846:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "4846:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "4910:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4920:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4910:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "4934:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4910:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "4910:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4967:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4975:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "4986:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "4958:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4958:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "4953:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "5026:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "5034:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "5045:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "5006:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5006:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "5006:46:0"
											}
										]
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4319:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4344:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "4372:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4308:85:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4411:0:0"
									},
									"scope": 537,
									"src": "4290:770:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "5212:334:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 354,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 348,
																"src": "5231:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5250:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5242:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 355,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5242:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5242:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5231:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5254:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 353,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5223:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5223:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "5223:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5330:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5322:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 364,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5322:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5322:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 368,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5334:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "5343:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 363,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "5301:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5301:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "5301:49:0"
											},
											{
												"expression": {
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 372,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "5363:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 373,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "5379:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5363:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 375,
												"nodeType": "ExpressionStatement",
												"src": "5363:22:0"
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 376,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "5396:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 378,
														"indexExpression": {
															"id": 377,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5406:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5396:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 379,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "5418:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5396:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "5396:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5457:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5449:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 383,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5449:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5449:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 387,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "5470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 382,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "5440:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5440:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 390,
												"nodeType": "EmitStatement",
												"src": "5435:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 394,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5518:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 392,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5510:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5510:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 396,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "5522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "5531:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 391,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "5490:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5490:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "5490:48:0"
											}
										]
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "5162:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "5179:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5179:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5161:33:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5212:0:0"
									},
									"scope": 537,
									"src": "5147:399:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "5698:526:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 409,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "5717:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5736:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 411,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5728:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 410,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5728:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5728:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5717:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5740:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5709:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "5709:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 419,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "5810:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5827:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5819:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 420,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5819:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 424,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "5831:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 418,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "5789:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5789:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "5789:49:0"
											},
											{
												"assignments": [
													428
												],
												"declarations": [
													{
														"constant": false,
														"id": 428,
														"mutability": "mutable",
														"name": "accountBalance",
														"nodeType": "VariableDeclaration",
														"scope": 471,
														"src": "5851:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 427,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 432,
												"initialValue": {
													"baseExpression": {
														"id": 429,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "5876:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 431,
													"indexExpression": {
														"id": 430,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "5886:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5876:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5851:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 434,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "5913:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 435,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "5931:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5913:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5939:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5905:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 439,
												"nodeType": "ExpressionStatement",
												"src": "5905:71:0"
											},
											{
												"id": 448,
												"nodeType": "UncheckedBlock",
												"src": "5987:81:0",
												"statements": [
													{
														"expression": {
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 440,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "6012:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 442,
																"indexExpression": {
																	"id": 441,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6022:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "6012:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 443,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "6033:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 444,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "6050:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6033:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6012:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 447,
														"nodeType": "ExpressionStatement",
														"src": "6012:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 449,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "6078:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 450,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "6094:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6078:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "6078:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 454,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "6127:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6144:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6136:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 455,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6136:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6136:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 459,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "6148:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 453,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "6118:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6118:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 461,
												"nodeType": "EmitStatement",
												"src": "6113:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 463,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "6188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6205:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6197:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 464,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6197:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6197:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "6209:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 462,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "6168:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6168:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "6168:48:0"
											}
										]
									},
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5648:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "5665:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5647:33:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:0"
									},
									"scope": 537,
									"src": "5633:591:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 515,
										"nodeType": "Block",
										"src": "6421:263:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 482,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "6440:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 485,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6457:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6449:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 483,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6449:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6449:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6440:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6461:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6432:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6432:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "6432:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 492,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 476,
																"src": "6519:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6538:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 493,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6530:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6530:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6519:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6542:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6511:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6511:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 500,
												"nodeType": "ExpressionStatement",
												"src": "6511:68:0"
											},
											{
												"expression": {
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 501,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 25,
																"src": "6592:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 504,
															"indexExpression": {
																"id": 502,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "6604:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6592:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 505,
														"indexExpression": {
															"id": 503,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "6611:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6592:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 506,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "6622:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6592:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "6592:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 510,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "6653:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "6660:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 512,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "6669:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 509,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "6644:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6644:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "EmitStatement",
												"src": "6639:37:0"
											}
										]
									},
									"id": 516,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "6332:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "6356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "6382:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6321:82:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6421:0:0"
									},
									"scope": 537,
									"src": "6304:380:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "6891:2:0",
										"statements": []
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "6808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "6831:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6831:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "6852:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6797:76:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6891:0:0"
									},
									"scope": 537,
									"src": "6768:125:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "7099:2:0",
										"statements": []
									},
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "7016:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "7039:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "7060:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7005:76:0"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7099:0:0"
									},
									"scope": 537,
									"src": "6977:124:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 538,
							"src": "259:6845:0"
						}
					],
					"src": "35:7073:0"
				},
				"id": 0
			},
			"contracts/abstracts/Context.sol": {
				"ast": {
					"absolutePath": "contracts/abstracts/Context.sol",
					"exportedSymbols": {
						"Context": [
							558
						]
					},
					"id": 559,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 539,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 558,
							"linearizedBaseContracts": [
								558
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 547,
										"nodeType": "Block",
										"src": "542:36:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 544,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "560:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "560:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 543,
												"id": 546,
												"nodeType": "Return",
												"src": "553:17:1"
											}
										]
									},
									"id": 548,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "499:2:1"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "533:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "533:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "532:9:1"
									},
									"scope": 558,
									"src": "480:98:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 556,
										"nodeType": "Block",
										"src": "653:172:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 553,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "809:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "809:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 552,
												"id": 555,
												"nodeType": "Return",
												"src": "802:15:1"
											}
										]
									},
									"id": 557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "603:2:1"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "637:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "637:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:16:1"
									},
									"scope": 558,
									"src": "586:239:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 559,
							"src": "447:381:1"
						}
					],
					"src": "35:793:1"
				},
				"id": 1
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							627
						]
					},
					"id": 628,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 560,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 627,
							"linearizedBaseContracts": [
								627
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "18160ddd",
									"id": 565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "141:2:2"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "167:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "167:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "166:9:2"
									},
									"scope": 627,
									"src": "121:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 572,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "248:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "248:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "247:17:2"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "288:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:9:2"
									},
									"scope": 627,
									"src": "229:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "473:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "492:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "492:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:35:2"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "544:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 578,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "544:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:6:2"
									},
									"scope": 627,
									"src": "455:95:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "662:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "677:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:32:2"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "744:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:9:2"
									},
									"scope": 627,
									"src": "643:110:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 599,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "844:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "861:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:33:2"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "895:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 596,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "895:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "894:6:2"
									},
									"scope": 627,
									"src": "827:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1042:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1067:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1067:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1095:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1095:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:85:2"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "1135:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1135:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1134:6:2"
									},
									"scope": 627,
									"src": "1010:131:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 618,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "1241:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "1263:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "1283:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1283:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:57:2"
									},
									"src": "1226:72:2"
								},
								{
									"anonymous": false,
									"id": 626,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "1377:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1377:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "1409:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "1443:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1366:97:2"
									},
									"src": "1352:112:2"
								}
							],
							"scope": 628,
							"src": "61:1406:2"
						}
					],
					"src": "33:1436:2"
				},
				"id": 2
			},
			"contracts/interfaces/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							627
						],
						"IERC20Metadata": [
							648
						]
					},
					"id": 649,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 629,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:3"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 630,
							"nodeType": "ImportDirective",
							"scope": 649,
							"sourceUnit": 628,
							"src": "61:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 631,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 627,
										"src": "165:6:3"
									},
									"id": 632,
									"nodeType": "InheritanceSpecifier",
									"src": "165:6:3"
								}
							],
							"contractDependencies": [
								627
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 648,
							"linearizedBaseContracts": [
								648,
								627
							],
							"name": "IERC20Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "06fdde03",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "219:2:3"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "245:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 634,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "245:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "244:15:3"
									},
									"scope": 648,
									"src": "206:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 642,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:2:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "336:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 639,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "336:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:15:3"
									},
									"scope": 648,
									"src": "295:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:3"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "450:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 644,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "450:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:7:3"
									},
									"scope": 648,
									"src": "407:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 649,
							"src": "137:323:3"
						}
					],
					"src": "33:427:3"
				},
				"id": 3
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							909
						]
					},
					"id": 910,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 650,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 651,
								"nodeType": "StructuredDocumentation",
								"src": "60:575:4",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 909,
							"linearizedBaseContracts": [
								909
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 676,
										"nodeType": "Block",
										"src": "951:114:4",
										"statements": [
											{
												"assignments": [
													662
												],
												"declarations": [
													{
														"constant": false,
														"id": 662,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 676,
														"src": "962:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 661,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "962:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 663,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 654,
														"src": "974:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 664,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "978:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "974:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "962:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 668,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "998:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 669,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "1003:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "998:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1006:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "990:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "990:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "990:46:4"
											},
											{
												"expression": {
													"id": 674,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 662,
													"src": "1056:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 660,
												"id": 675,
												"nodeType": "Return",
												"src": "1049:8:4"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "661:217:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting on overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "897:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "897:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "908:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:22:4"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "942:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:9:4"
									},
									"scope": 909,
									"src": "884:181:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 704,
										"nodeType": "Block",
										"src": "1411:97:4",
										"statements": [
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 704,
														"src": "1422:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 689,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1422:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 694,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 691,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "1434:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 692,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "1438:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1434:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1422:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 696,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "1458:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 697,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "1463:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1458:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 699,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "1466:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 695,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1450:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1450:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "1450:29:4"
											},
											{
												"expression": {
													"id": 702,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 690,
													"src": "1499:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 688,
												"id": 703,
												"nodeType": "Return",
												"src": "1492:8:4"
											}
										]
									},
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "1073:237:4",
										"text": " @dev Returns the addition of two unsigned integers, reverting with custom message on overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1329:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1329:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1340:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1340:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1351:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 683,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1351:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1328:50:4"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1402:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1402:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:9:4"
									},
									"scope": 909,
									"src": "1316:192:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "1844:70:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 716,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "1866:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 717,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "1869:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e20756e646572666c6f77",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1872:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1caebeb8fec78d96e2107fd22e0abe38fcab72034848d9a80a8de2a86ac41d40",
																"typeString": "literal_string \"SafeMath: subtraction underflow\""
															},
															"value": "SafeMath: subtraction underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_1caebeb8fec78d96e2107fd22e0abe38fcab72034848d9a80a8de2a86ac41d40",
																"typeString": "literal_string \"SafeMath: subtraction underflow\""
															}
														],
														"id": 715,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															722,
															750
														],
														"referencedDeclaration": 750,
														"src": "1862:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1862:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 720,
												"nodeType": "Return",
												"src": "1855:51:4"
											}
										]
									},
									"documentation": {
										"id": 706,
										"nodeType": "StructuredDocumentation",
										"src": "1516:255:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on underflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot underflow."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1790:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 707,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1801:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1801:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1789:22:4"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "1835:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:9:4"
									},
									"scope": 909,
									"src": "1777:137:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "2298:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 735,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 727,
																"src": "2317:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 736,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 725,
																"src": "2322:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2317:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 738,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "2325:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2309:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 740,
												"nodeType": "ExpressionStatement",
												"src": "2309:29:4"
											},
											{
												"assignments": [
													742
												],
												"declarations": [
													{
														"constant": false,
														"id": 742,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "2349:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 741,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2349:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 743,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "2361:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 744,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "2365:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2361:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2349:17:4"
											},
											{
												"expression": {
													"id": 747,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 742,
													"src": "2386:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 733,
												"id": 748,
												"nodeType": "Return",
												"src": "2379:8:4"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "1922:275:4",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on underflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot underflow."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "2216:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2216:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "2227:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2227:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "2238:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 728,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2238:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2215:50:4"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "2289:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2289:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2288:9:4"
									},
									"scope": 909,
									"src": "2203:192:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "2705:404:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "2941:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2946:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2941:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 766,
												"nodeType": "IfStatement",
												"src": "2937:47:4",
												"trueBody": {
													"id": 765,
													"nodeType": "Block",
													"src": "2949:35:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2971:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 759,
															"id": 764,
															"nodeType": "Return",
															"src": "2964:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													768
												],
												"declarations": [
													{
														"constant": false,
														"id": 768,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 784,
														"src": "2996:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 767,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2996:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 769,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 753,
														"src": "3008:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 770,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 755,
														"src": "3012:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3008:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2996:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 768,
																	"src": "3032:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 775,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 753,
																	"src": "3036:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3032:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 777,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 755,
																"src": "3041:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3032:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 779,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3044:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3024:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3024:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 781,
												"nodeType": "ExpressionStatement",
												"src": "3024:56:4"
											},
											{
												"expression": {
													"id": 782,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 768,
													"src": "3100:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 759,
												"id": 783,
												"nodeType": "Return",
												"src": "3093:8:4"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "2403:229:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2651:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2651:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2662:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2650:22:4"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2696:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2696:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:9:4"
									},
									"scope": 909,
									"src": "2638:471:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "3447:381:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 797,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3683:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3688:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3683:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 803,
												"nodeType": "IfStatement",
												"src": "3679:47:4",
												"trueBody": {
													"id": 802,
													"nodeType": "Block",
													"src": "3691:35:4",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3713:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 796,
															"id": 801,
															"nodeType": "Return",
															"src": "3706:8:4"
														}
													]
												}
											},
											{
												"assignments": [
													805
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 821,
														"src": "3738:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 804,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3738:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 809,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 806,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "3750:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 807,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "3754:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3750:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3738:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 811,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 805,
																	"src": "3774:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 812,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 788,
																	"src": "3778:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3774:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 814,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 790,
																"src": "3783:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3774:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 816,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "3786:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3766:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3766:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "3766:33:4"
											},
											{
												"expression": {
													"id": 819,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 805,
													"src": "3819:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 796,
												"id": 820,
												"nodeType": "Return",
												"src": "3812:8:4"
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "3117:229:4",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "3365:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3365:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "3376:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3376:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "3387:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 791,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3387:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:50:4"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "3438:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:9:4"
									},
									"scope": 909,
									"src": "3352:476:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "4363:65:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 833,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "4385:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 834,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "4388:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4391:28:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 832,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															839,
															867
														],
														"referencedDeclaration": 867,
														"src": "4381:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4381:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 831,
												"id": 837,
												"nodeType": "Return",
												"src": "4374:46:4"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "3836:454:4",
										"text": " @dev Returns the integer division of two unsigned integers.\n Reverts on division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "4309:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4309:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "4320:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4320:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4308:22:4"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 839,
												"src": "4354:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4354:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4353:9:4"
									},
									"scope": 909,
									"src": "4296:132:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "5011:250:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 852,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 844,
																"src": "5097:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5101:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5097:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 855,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "5104:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5089:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5089:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "5089:28:4"
											},
											{
												"assignments": [
													859
												],
												"declarations": [
													{
														"constant": false,
														"id": 859,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 866,
														"src": "5128:9:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 858,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5128:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 860,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "5140:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 861,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "5144:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5140:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5128:17:4"
											},
											{
												"expression": {
													"id": 864,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 859,
													"src": "5252:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 850,
												"id": 865,
												"nodeType": "Return",
												"src": "5245:8:4"
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "4436:474:4",
										"text": " @dev Returns the integer division of two unsigned integers.\n Reverts with custom message on division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "4929:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4929:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "4940:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4940:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "4951:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4951:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4928:50:4"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 867,
												"src": "5002:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5002:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5001:9:4"
									},
									"scope": 909,
									"src": "4916:345:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "5785:63:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "5807:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 879,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 872,
															"src": "5810:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5813:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 877,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															884,
															908
														],
														"referencedDeclaration": 908,
														"src": "5803:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5803:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 876,
												"id": 882,
												"nodeType": "Return",
												"src": "5796:44:4"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "5269:443:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5731:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5731:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5742:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5742:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5730:22:4"
									},
									"returnParameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "5776:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:4"
									},
									"scope": 909,
									"src": "5718:130:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "6420:71:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 897,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "6439:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6444:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6439:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 900,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "6447:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 896,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6431:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6431:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "6431:29:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 903,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "6478:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 904,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 889,
														"src": "6482:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6478:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 895,
												"id": 906,
												"nodeType": "Return",
												"src": "6471:12:4"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "5856:463:4",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "6338:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6338:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "6349:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "6360:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 890,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6360:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6337:50:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "6411:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6411:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6410:9:4"
									},
									"scope": 909,
									"src": "6325:166:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 910,
							"src": "637:5857:4"
						}
					],
					"src": "33:6463:4"
				},
				"id": 4
			}
		}
	}
}